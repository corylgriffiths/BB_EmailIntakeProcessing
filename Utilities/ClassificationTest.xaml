<Activity mc:Ignorable="sap sap2010" x:Class="Workflow" this:Workflow.in_folderPath="Data\" this:Workflow.in_InsBackId="b3ebdb94-8f0a-f011-90cd-002248237549" this:Workflow.in_InsFrontId="8ee698e1-810a-f011-90cd-002248237549" this:Workflow.in_FormId="bd530ee5-1a0b-f011-90cd-002248237549" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uisad="clr-namespace:UiPath.IntelligentOCR.StudioWeb.Activities.DocumentClassification;assembly=UiPath.IntelligentOCR.StudioWeb.Activities" xmlns:uisad1="clr-namespace:UiPath.IntelligentOCR.StudioWeb.Activities.DataExtraction;assembly=UiPath.IntelligentOCR.StudioWeb.Activities" xmlns:uisaseib="clr-namespace:UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.ExtendedExtractionResultsForDocumentData.IntakesV2InsuranceCardV2.Bundle;assembly=ExtendedExtractionRe.HJ0lBrpnLQ1QMj2S2hnqt43" xmlns:uisaseib1="clr-namespace:UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.ExtendedExtractionResultsForDocumentData.IntakesV2InsuranceCardBackV2.Bundle;assembly=ExtendedExtractionRe.L42dL2fCdyJ1GSC2S1gfRWE2" xmlns:uisaseib2="clr-namespace:UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.ExtendedExtractionResultsForDocumentData.IntakesV2IntakeFormV2.Bundle;assembly=ExtendedExtractionRe.yi79378CoP1a6WUtOMwk13" xmlns:upr="clr-namespace:UiPath.Platform.ResourceHandling;assembly=UiPath.Platform" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="argument1" Type="InArgument(x:String)" />
    <x:Property Name="in_folderPath" Type="InArgument(x:String)" />
    <x:Property Name="in_InsBackId" Type="InArgument(x:String)" />
    <x:Property Name="in_InsFrontId" Type="InArgument(x:String)" />
    <x:Property Name="in_FormId" Type="InArgument(x:String)" />
  </x:Members>
  <this:Workflow.argument1>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:Workflow.argument1>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.DocumentClassification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Classification</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.DataExtraction</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.Platform</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.ExtendedExtractionResultsForDocumentData.IntakesInsuranceCardV1.Bundle</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.ExtendedExtractionResultsForDocumentData.IntakesIntakeFormV1.Bundle</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.ExtendedExtractionResultsForDocumentData.IntakesV2IntakeFormV2.Bundle</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.ExtendedExtractionResultsForDocumentData.IntakesV2InsuranceCardV2.Bundle</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.IO</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.ExtendedExtractionResultsForDocumentData.IntakesInsuranceCardBackV1.Bundle</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.ExtendedExtractionResultsForDocumentData.IntakesV2InsuranceCardBackV2.Bundle</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.StudioWeb.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>UiPath.CodedWorkflows</AssemblyReference>
      <AssemblyReference>ExtendedExtractionRe.uLsAD1JhLTS1BlEEcgTk4G1</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>ExtendedExtractionRe.py4ZZ2TY3jG1uUUFC4ledqr</AssemblyReference>
      <AssemblyReference>ExtendedExtractionRe.OrYib2h3K5E1bg1ax2mGozZ4</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>ExtendedExtractionRe.yi79378CoP1a6WUtOMwk13</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>ExtendedExtractionRe.HJ0lBrpnLQ1QMj2S2hnqt43</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>ExtendedExtractionRe.L42dL2fCdyJ1GSC2S1gfRWE2</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Workflow" sap:VirtualizedContainerService.HintSize="2284.2666666666664,8174" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="uisad:DocumentData" Name="ClassificationResults" />
      <Variable x:TypeArguments="sd:DataTable" Name="carrierDT" />
      <Variable x:TypeArguments="sd:DataTable" Name="providerServices" />
      <Variable x:TypeArguments="x:String" Name="patientAge" />
      <Variable x:TypeArguments="x:String" Name="testType" />
      <Variable x:TypeArguments="x:String" Name="carrier" />
      <Variable x:TypeArguments="x:String" Name="providersDict" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="providersList" />
      <Variable x:TypeArguments="sd:DataTable" Name="providerInsurance" />
      <Variable x:TypeArguments="x:Int32" Name="index_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:String x:Key="SourceIdRef">ForEachRow_2</x:String>
            <x:String x:Key="SourcePropertyName">CurrentIndex</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="providerCode" />
      <Variable x:TypeArguments="x:String" Name="insProviderCode" />
      <Variable x:TypeArguments="sd:DataTable" Name="appointmentTypeDT" />
      <Variable x:TypeArguments="uisad1:IDocumentData(uisaseib2:IntakesV2IntakeFormV2)" Name="ExtractionResults" />
      <Variable x:TypeArguments="x:String" Name="serviceType" />
      <Variable x:TypeArguments="uisad1:IDocumentData(uisaseib:IntakesV2InsuranceCardV2)" Name="InsDocumentData" />
      <Variable x:TypeArguments="uisad1:IDocumentData(uisaseib1:IntakesV2InsuranceCardBackV2)" Name="BackDocumentData" />
      <Variable x:TypeArguments="uisad1:IDocumentData(uisaseib2:IntakesV2IntakeFormV2)" Name="FormDocumentData" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="LoadXLStoDatatable - Invoke Workflow File (Utilities\\LoadXLStoDatatable.xaml)" sap:VirtualizedContainerService.HintSize="556.6666666666666,177.33333333333334" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Utilities\\LoadXLStoDatatable.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_fullfilePathName">Data\ProviderList.xlsx</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_sheetname">InsuranceCarrierMapKey</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_StartRange">A1</InArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_DataTable">
          <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_50">
            <CSharpReference.Result>
              <OutArgument x:TypeArguments="Location(sd:DataTable)" />
            </CSharpReference.Result>carrierDT</CSharpReference>
        </OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="LoadXLStoDatatable - Invoke Workflow File (Utilities\\LoadXLStoDatatable.xaml)" sap:VirtualizedContainerService.HintSize="556.6666666666666,177.33333333333334" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Utilities\\LoadXLStoDatatable.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_fullfilePathName">Data\ProviderList.xlsx</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_sheetname">ProviderToServicesMap</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_StartRange">A1</InArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_DataTable">
          <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_53">
            <CSharpReference.Result>
              <OutArgument x:TypeArguments="Location(sd:DataTable)" />
            </CSharpReference.Result>providerServices</CSharpReference>
        </OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="LoadXLStoDatatable - Invoke Workflow File (Utilities\\LoadXLStoDatatable.xaml)" sap:VirtualizedContainerService.HintSize="556.6666666666666,177.33333333333334" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Utilities\\LoadXLStoDatatable.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_fullfilePathName">Data\ProviderList.xlsx</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_sheetname">Provider_Incurancecode</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_StartRange">A1</InArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_DataTable">
          <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_62">
            <CSharpReference.Result>
              <OutArgument x:TypeArguments="Location(sd:DataTable)" />
            </CSharpReference.Result>providerInsurance</CSharpReference>
        </OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="LoadXLStoDatatable - Invoke Workflow File (Utilities\\LoadXLStoDatatable.xaml)" sap:VirtualizedContainerService.HintSize="556.6666666666666,177.33333333333334" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Utilities\\LoadXLStoDatatable.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_fullfilePathName">Data\ProviderList.xlsx</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_sheetname">AppointmentTypeMap</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_StartRange">A1</InArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_DataTable">
          <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_69">
            <CSharpReference.Result>
              <OutArgument x:TypeArguments="Location(sd:DataTable)" />
            </CSharpReference.Result>appointmentTypeDT</CSharpReference>
        </OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:ForEachFileX DisplayName="For Each File in Folder" Folder="C:\Users\GabeJames\Documents\UiPath\EmailIntakeProcessing\Data\195f85d09feec838" sap:VirtualizedContainerService.HintSize="556.6666666666666,3023.3333333333335" sap2010:WorkflowViewState.IdRef="ForEachFileX_1" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
      <ui:ForEachFileX.Body>
        <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
          <ActivityAction.Argument1>
            <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
          </ActivityAction.Argument1>
          <ActivityAction.Argument2>
            <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
          </ActivityAction.Argument2>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="522.6666666666666,2722" sap2010:WorkflowViewState.IdRef="Sequence_23">
            <Sequence.Variables>
              <Variable x:TypeArguments="uisad:DocumentData" Name="ClassifiedData" />
              <Variable x:TypeArguments="x:String" Name="FileName" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="488.6666666666667,176.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_14">
              <ui:LogMessage.Message>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_162">CurrentFile.FullName</CSharpValue>
                </InArgument>
              </ui:LogMessage.Message>
            </ui:LogMessage>
            <Assign sap:VirtualizedContainerService.HintSize="488.6666666666667,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_43">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_129">FileName</CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_164">CurrentFile.FullName</CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <p:ClassifyDocument ApiKey="{x:Null}" ClassifierResult="{x:Null}" DocumentObjectModel="{x:Null}" DocumentPath="{x:Null}" DocumentText="{x:Null}" DocumentTypes="{x:Null}" PersistenceId="{x:Null}" PredictionId="{x:Null}" Prompt="{x:Null}" ClassifierId="0e0f6d74-f613-f011-8b3d-6045bdd39e1e" DisplayName="Classify Document" Endpoint="https://cloud.uipath.com/1f8119f7-4993-4ba4-8d5e-bc757095de38/fbe4cf4b-3c41-4d6d-aa0c-371ed57df4f8/du_/api/framework/projects/0da1be7c-810a-f011-90cd-00224830e0e8/classifiers/0e0f6d74-f613-f011-8b3d-6045bdd39e1e/classification/start?api-version=1.0" sap:VirtualizedContainerService.HintSize="488.6666666666667,289.3333333333333" sap2010:WorkflowViewState.IdRef="ClassifyDocument_2" MinimumConfidence="50" ProjectId="0da1be7c-810a-f011-90cd-00224830e0e8" TimeoutInSeconds="3600">
              <p:ClassifyDocument.ClassificationResults>
                <OutArgument x:TypeArguments="uisad:DocumentData">
                  <CSharpReference x:TypeArguments="uisad:DocumentData" sap2010:WorkflowViewState.IdRef="CSharpReference`1_74">
                    <CSharpReference.Result>
                      <OutArgument x:TypeArguments="Location(uisad:DocumentData)" />
                    </CSharpReference.Result>ClassifiedData</CSharpReference>
                </OutArgument>
              </p:ClassifyDocument.ClassificationResults>
              <p:ClassifyDocument.FileInput>
                <InArgument x:TypeArguments="upr:IResource">
                  <CSharpValue x:TypeArguments="upr:IResource" sap2010:WorkflowViewState.IdRef="CSharpValue`1_165">LocalResource.FromPath(FileName)</CSharpValue>
                </InArgument>
              </p:ClassifyDocument.FileInput>
              <p:ClassifyDocument.GptPromptWithVariables>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </p:ClassifyDocument.GptPromptWithVariables>
            </p:ClassifyDocument>
            <ui:RenameFileX DisplayName="Rename File" sap:VirtualizedContainerService.HintSize="488.6666666666667,180" sap2010:WorkflowViewState.IdRef="RenameFileX_1" KeepExtension="True">
              <ui:RenameFileX.FilePath>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_168">CurrentFile.FullName</CSharpValue>
                </InArgument>
              </ui:RenameFileX.FilePath>
              <ui:RenameFileX.NewName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_169">"Data\\" +</CSharpValue>
                </InArgument>
              </ui:RenameFileX.NewName>
            </ui:RenameFileX>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="488.6666666666667,176.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_9">
              <ui:LogMessage.Message>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_93">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:Object" />
                    </CSharpValue.Result>ClassifiedData.DocumentType.Id</CSharpValue>
                </InArgument>
              </ui:LogMessage.Message>
            </ui:LogMessage>
            <If sap:VirtualizedContainerService.HintSize="488.6666666666667,1722" sap2010:WorkflowViewState.IdRef="If_5">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_94">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:Boolean" />
                    </CSharpValue.Result>ClassifiedData.DocumentType.Id == in_InsFrontId</CSharpValue>
                </InArgument>
              </If.Condition>
              <If.Then>
                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="486.6666666666667,356.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_28">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <p:ExtractDocumentDataWithDocumentData x:TypeArguments="uisaseib:IntakesV2InsuranceCardV2" DocumentBounds="{x:Null}" DocumentObjectModel="{x:Null}" DocumentPath="{x:Null}" DocumentText="{x:Null}" ExtractorDocumentType="{x:Null}" ExtractorResult="{x:Null}" PersistenceId="{x:Null}" PredictionId="{x:Null}" Prompt="{x:Null}" ApplyAutoValidation="False" DisplayName="Extract Document Data" DocType="100f6d74-f613-f011-8b3d-6045bdd39e1e" GenerateData="True" sap:VirtualizedContainerService.HintSize="452.6666666666667,296.6666666666667" sap2010:WorkflowViewState.IdRef="ExtractDocumentDataWithDocumentData`1_2" ProjectId="0da1be7c-810a-f011-90cd-00224830e0e8" TimeoutInSeconds="3600">
                    <p:ExtractDocumentDataWithDocumentData.AutoValidationConfidenceThreshold>
                      <InArgument x:TypeArguments="s:Nullable(x:Int32)">
                        <Literal x:TypeArguments="s:Nullable(x:Int32)" Value="0">
                          <Literal.Result>
                            <OutArgument x:TypeArguments="s:Nullable(x:Int32)" />
                          </Literal.Result>
                        </Literal>
                      </InArgument>
                    </p:ExtractDocumentDataWithDocumentData.AutoValidationConfidenceThreshold>
                    <p:ExtractDocumentDataWithDocumentData.ExtractionResults>
                      <OutArgument x:TypeArguments="uisad1:IDocumentData(uisaseib:IntakesV2InsuranceCardV2)">
                        <CSharpReference x:TypeArguments="uisad1:IDocumentData(uisaseib:IntakesV2InsuranceCardV2)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_126">
                          <CSharpReference.Result>
                            <OutArgument x:TypeArguments="Location(uisad1:IDocumentData(uisaseib:IntakesV2InsuranceCardV2))" />
                          </CSharpReference.Result>InsDocumentData</CSharpReference>
                      </OutArgument>
                    </p:ExtractDocumentDataWithDocumentData.ExtractionResults>
                    <p:ExtractDocumentDataWithDocumentData.FileInput>
                      <InArgument x:TypeArguments="upr:IResource">
                        <CSharpValue x:TypeArguments="upr:IResource" sap2010:WorkflowViewState.IdRef="CSharpValue`1_95">
                          <CSharpValue.Result>
                            <OutArgument x:TypeArguments="upr:IResource" />
                          </CSharpValue.Result>ClassifiedData</CSharpValue>
                      </InArgument>
                    </p:ExtractDocumentDataWithDocumentData.FileInput>
                    <p:ExtractDocumentDataWithDocumentData.GptPromptWithVariables>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </p:ExtractDocumentDataWithDocumentData.GptPromptWithVariables>
                  </p:ExtractDocumentDataWithDocumentData>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Else" sap:VirtualizedContainerService.HintSize="486.4,1234.4" sap2010:WorkflowViewState.IdRef="Sequence_34">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If sap:VirtualizedContainerService.HintSize="452.8,1143.2" sap2010:WorkflowViewState.IdRef="If_6">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_96">
                          <CSharpValue.Result>
                            <OutArgument x:TypeArguments="x:Boolean" />
                          </CSharpValue.Result>ClassifiedData.DocumentType.Id == in_InsBackId</CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="451.2,335.2" sap2010:WorkflowViewState.IdRef="Sequence_29">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <p:ExtractDocumentDataWithDocumentData x:TypeArguments="uisaseib1:IntakesV2InsuranceCardBackV2" DocumentBounds="{x:Null}" DocumentObjectModel="{x:Null}" DocumentPath="{x:Null}" DocumentText="{x:Null}" ExtractorDocumentType="{x:Null}" ExtractorResult="{x:Null}" PersistenceId="{x:Null}" PredictionId="{x:Null}" Prompt="{x:Null}" ApplyAutoValidation="False" DisplayName="Extract Document Data" DocType="110f6d74-f613-f011-8b3d-6045bdd39e1e" GenerateData="True" sap:VirtualizedContainerService.HintSize="417.6,275.2" sap2010:WorkflowViewState.IdRef="ExtractDocumentDataWithDocumentData`1_3" ProjectId="0da1be7c-810a-f011-90cd-00224830e0e8" TimeoutInSeconds="3600">
                          <p:ExtractDocumentDataWithDocumentData.AutoValidationConfidenceThreshold>
                            <InArgument x:TypeArguments="s:Nullable(x:Int32)">
                              <Literal x:TypeArguments="s:Nullable(x:Int32)" Value="0">
                                <Literal.Result>
                                  <OutArgument x:TypeArguments="s:Nullable(x:Int32)" />
                                </Literal.Result>
                              </Literal>
                            </InArgument>
                          </p:ExtractDocumentDataWithDocumentData.AutoValidationConfidenceThreshold>
                          <p:ExtractDocumentDataWithDocumentData.ExtractionResults>
                            <OutArgument x:TypeArguments="uisad1:IDocumentData(uisaseib1:IntakesV2InsuranceCardBackV2)">
                              <CSharpReference x:TypeArguments="uisad1:IDocumentData(uisaseib1:IntakesV2InsuranceCardBackV2)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_127">
                                <CSharpReference.Result>
                                  <OutArgument x:TypeArguments="Location(uisad1:IDocumentData(uisaseib1:IntakesV2InsuranceCardBackV2))" />
                                </CSharpReference.Result>BackDocumentData</CSharpReference>
                            </OutArgument>
                          </p:ExtractDocumentDataWithDocumentData.ExtractionResults>
                          <p:ExtractDocumentDataWithDocumentData.FileInput>
                            <InArgument x:TypeArguments="upr:IResource">
                              <CSharpValue x:TypeArguments="upr:IResource" sap2010:WorkflowViewState.IdRef="CSharpValue`1_97">
                                <CSharpValue.Result>
                                  <OutArgument x:TypeArguments="upr:IResource" />
                                </CSharpValue.Result>ClassifiedData</CSharpValue>
                            </InArgument>
                          </p:ExtractDocumentDataWithDocumentData.FileInput>
                          <p:ExtractDocumentDataWithDocumentData.GptPromptWithVariables>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </p:ExtractDocumentDataWithDocumentData.GptPromptWithVariables>
                        </p:ExtractDocumentDataWithDocumentData>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="451.2,678.4" sap2010:WorkflowViewState.IdRef="Sequence_33">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If sap:VirtualizedContainerService.HintSize="417.6,618.4" sap2010:WorkflowViewState.IdRef="If_7">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_98">
                                <CSharpValue.Result>
                                  <OutArgument x:TypeArguments="x:Boolean" />
                                </CSharpValue.Result>ClassifiedData.DocumentType.Id == in_FormId</CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,399.2" sap2010:WorkflowViewState.IdRef="Sequence_30">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <p:ExtractDocumentDataWithDocumentData x:TypeArguments="uisaseib2:IntakesV2IntakeFormV2" DocumentBounds="{x:Null}" DocumentObjectModel="{x:Null}" DocumentPath="{x:Null}" DocumentText="{x:Null}" ExtractorDocumentType="{x:Null}" ExtractorResult="{x:Null}" PersistenceId="{x:Null}" PredictionId="{x:Null}" Prompt="{x:Null}" ApplyAutoValidation="False" DisplayName="Extract Document Data" DocType="0f0f6d74-f613-f011-8b3d-6045bdd39e1e" GenerateData="True" sap:VirtualizedContainerService.HintSize="382.4,339.2" sap2010:WorkflowViewState.IdRef="ExtractDocumentDataWithDocumentData`1_4" ProjectId="0da1be7c-810a-f011-90cd-00224830e0e8" TimeoutInSeconds="3600">
                                <p:ExtractDocumentDataWithDocumentData.AutoValidationConfidenceThreshold>
                                  <InArgument x:TypeArguments="s:Nullable(x:Int32)">
                                    <Literal x:TypeArguments="s:Nullable(x:Int32)" Value="0">
                                      <Literal.Result>
                                        <OutArgument x:TypeArguments="s:Nullable(x:Int32)" />
                                      </Literal.Result>
                                    </Literal>
                                  </InArgument>
                                </p:ExtractDocumentDataWithDocumentData.AutoValidationConfidenceThreshold>
                                <p:ExtractDocumentDataWithDocumentData.ExtractionResults>
                                  <OutArgument x:TypeArguments="uisad1:IDocumentData(uisaseib2:IntakesV2IntakeFormV2)">
                                    <CSharpReference x:TypeArguments="uisad1:IDocumentData(uisaseib2:IntakesV2IntakeFormV2)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_128">FormDocumentData</CSharpReference>
                                  </OutArgument>
                                </p:ExtractDocumentDataWithDocumentData.ExtractionResults>
                                <p:ExtractDocumentDataWithDocumentData.FileInput>
                                  <InArgument x:TypeArguments="upr:IResource">
                                    <CSharpValue x:TypeArguments="upr:IResource" sap2010:WorkflowViewState.IdRef="CSharpValue`1_99">
                                      <CSharpValue.Result>
                                        <OutArgument x:TypeArguments="upr:IResource" />
                                      </CSharpValue.Result>ClassifiedData</CSharpValue>
                                  </InArgument>
                                </p:ExtractDocumentDataWithDocumentData.FileInput>
                                <p:ExtractDocumentDataWithDocumentData.GptPromptWithVariables>
                                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                </p:ExtractDocumentDataWithDocumentData.GptPromptWithVariables>
                              </p:ExtractDocumentDataWithDocumentData>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_32">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEachFileX.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEachFileX>
    <Sequence DisplayName="Format intake information" sap:VirtualizedContainerService.HintSize="555.2,1423.2" sap2010:WorkflowViewState.IdRef="Sequence_24">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="patientName" />
        <Variable x:TypeArguments="x:String" Name="patientDOB" />
        <Variable x:TypeArguments="x:String" Name="patientGender" />
        <Variable x:TypeArguments="x:Boolean" Name="isMinor" />
        <Variable x:TypeArguments="x:String" Name="address" />
        <Variable x:TypeArguments="x:String" Name="city" />
        <Variable x:TypeArguments="x:String" Name="state" />
        <Variable x:TypeArguments="x:String" Name="email" />
        <Variable x:TypeArguments="x:String" Name="phone" />
        <Variable x:TypeArguments="x:String" Name="guardianName" />
        <Variable x:TypeArguments="x:String" Name="relationship" />
        <Variable x:TypeArguments="x:String" Name="cardNum" />
        <Variable x:TypeArguments="x:String" Name="cvv" />
        <Variable x:TypeArguments="x:String" Name="cardExpiration" />
        <Variable x:TypeArguments="x:String" Name="zipCode" />
        <Variable x:TypeArguments="x:String" Name="guardianLName" />
        <Variable x:TypeArguments="x:String" Name="guardianFName" />
        <Variable x:TypeArguments="x:String" Name="patientLName" />
        <Variable x:TypeArguments="x:String" Name="patientFName" />
        <Variable x:TypeArguments="x:String" Name="cardYearExpiration" />
        <Variable x:TypeArguments="x:String" Name="cardType" />
        <Variable x:TypeArguments="x:String" Name="cardMonthExpiration" />
        <Variable x:TypeArguments="x:String" Name="preferredProvider" />
        <Variable x:TypeArguments="x:String" Name="visitReason" />
        <Variable x:TypeArguments="x:String" Name="custodyDecision" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="478.4,648.8" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="32">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_28">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_78">
                    <CSharpReference.Result>
                      <OutArgument x:TypeArguments="Location(x:String)" />
                    </CSharpReference.Result>patientName</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_100">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>FormDocumentData.Data.Name.Value</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_29">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_79">
                    <CSharpReference.Result>
                      <OutArgument x:TypeArguments="Location(x:String)" />
                    </CSharpReference.Result>patientGender</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_101">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>FormDocumentData.Data.Gender.Value</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_30">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_80">
                    <CSharpReference.Result>
                      <OutArgument x:TypeArguments="Location(x:String)" />
                    </CSharpReference.Result>patientDOB</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_102">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>FormDocumentData.Data.DateOfBirth.Value</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_31">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_81">
                    <CSharpReference.Result>
                      <OutArgument x:TypeArguments="Location(x:String)" />
                    </CSharpReference.Result>patientAge</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_103">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>FormDocumentData.Data.Age.Value</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_32">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_82">
                    <CSharpReference.Result>
                      <OutArgument x:TypeArguments="Location(x:String)" />
                    </CSharpReference.Result>address</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_104">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>FormDocumentData.Data.Address.Value</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_33">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_83">
                    <CSharpReference.Result>
                      <OutArgument x:TypeArguments="Location(x:String)" />
                    </CSharpReference.Result>city</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_105">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>FormDocumentData.Data.City.Value</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_34">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_84">
                    <CSharpReference.Result>
                      <OutArgument x:TypeArguments="Location(x:String)" />
                    </CSharpReference.Result>state</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_106">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>FormDocumentData.Data.State.Value</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_35">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_85">
                    <CSharpReference.Result>
                      <OutArgument x:TypeArguments="Location(x:String)" />
                    </CSharpReference.Result>email</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_107">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>FormDocumentData.Data.EmailAddress.Value</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_36">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_86">
                    <CSharpReference.Result>
                      <OutArgument x:TypeArguments="Location(x:String)" />
                    </CSharpReference.Result>phone</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_108">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>FormDocumentData.Data.CellPhone.Value</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_37">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_87">
                    <CSharpReference.Result>
                      <OutArgument x:TypeArguments="Location(x:String)" />
                    </CSharpReference.Result>guardianName</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_109">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>FormDocumentData.Data.ParentsName.Value</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_38">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_88">
                    <CSharpReference.Result>
                      <OutArgument x:TypeArguments="Location(x:String)" />
                    </CSharpReference.Result>cardNum</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_110">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>FormDocumentData.Data.CCNumber.Value</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_39">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_89">
                    <CSharpReference.Result>
                      <OutArgument x:TypeArguments="Location(x:String)" />
                    </CSharpReference.Result>cvv</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_111">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>FormDocumentData.Data.CCCVV.Value</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_40">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_90">
                    <CSharpReference.Result>
                      <OutArgument x:TypeArguments="Location(x:String)" />
                    </CSharpReference.Result>cardExpiration</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_112">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>FormDocumentData.Data.CCExpirationDate.Value</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_41">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_91">
                    <CSharpReference.Result>
                      <OutArgument x:TypeArguments="Location(x:String)" />
                    </CSharpReference.Result>serviceType</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_113">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>FormDocumentData.Data.ServiceType.Value</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_42">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_92">
                    <CSharpReference.Result>
                      <OutArgument x:TypeArguments="Location(x:String)" />
                    </CSharpReference.Result>preferredProvider</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_114">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>FormDocumentData.Data.Provider.Value</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_43">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_93">
                    <CSharpReference.Result>
                      <OutArgument x:TypeArguments="Location(x:String)" />
                    </CSharpReference.Result>visitReason</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_115">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>FormDocumentData.Data.VisitReason.Value</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_44">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_94">
                    <CSharpReference.Result>
                      <OutArgument x:TypeArguments="Location(x:String)" />
                    </CSharpReference.Result>custodyDecision</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_116">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>FormDocumentData.Data.CustodyDecisionMaking.Value</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
      </ui:MultipleAssign>
      <Sequence DisplayName="Get the appointment Type" sap:VirtualizedContainerService.HintSize="478.4,100.8" sap2010:WorkflowViewState.IdRef="Sequence_31">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="504,961.6" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="502.4,788.8" sap2010:WorkflowViewState.IdRef="Sequence_25">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="key" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="468.8,113.6" sap2010:WorkflowViewState.IdRef="Assign_25">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_95">
                        <CSharpReference.Result>
                          <OutArgument x:TypeArguments="Location(x:String)" />
                        </CSharpReference.Result>key</CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_118">
                        <CSharpValue.Result>
                          <OutArgument x:TypeArguments="x:String" />
                        </CSharpValue.Result>CurrentRow["Key"].ToString()</CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <If sap:VirtualizedContainerService.HintSize="468.8,615.2" sap2010:WorkflowViewState.IdRef="If_8">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_119">
                        <CSharpValue.Result>
                          <OutArgument x:TypeArguments="x:Boolean" />
                        </CSharpValue.Result>serviceType.IndexOf(key, StringComparison.OrdinalIgnoreCase) &gt;= 0</CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <If.Then>
                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,396" sap2010:WorkflowViewState.IdRef="Sequence_35">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_26">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_96">
                              <CSharpReference.Result>
                                <OutArgument x:TypeArguments="Location(x:String)" />
                              </CSharpReference.Result>serviceType</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_120">
                              <CSharpValue.Result>
                                <OutArgument x:TypeArguments="x:String" />
                              </CSharpValue.Result>CurrentRow["Appointment Type"].ToString()</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.6,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_11">
                        <ui:LogMessage.Message>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_121">
                              <CSharpValue.Result>
                                <OutArgument x:TypeArguments="x:Object" />
                              </CSharpValue.Result>"Found the service type it is: " + serviceType</CSharpValue>
                          </InArgument>
                        </ui:LogMessage.Message>
                      </ui:LogMessage>
                      <ui:Break sap:VirtualizedContainerService.HintSize="433.6,48" sap2010:WorkflowViewState.IdRef="Break_3" />
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="467.2,89.6" sap2010:WorkflowViewState.IdRef="Sequence_36">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </ActivityAction>
          </ui:ForEachRow.Body>
          <ui:ForEachRow.DataTable>
            <InArgument x:TypeArguments="sd:DataTable">
              <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_117">
                <CSharpValue.Result>
                  <OutArgument x:TypeArguments="sd:DataTable" />
                </CSharpValue.Result>appointmentTypeDT</CSharpValue>
            </InArgument>
          </ui:ForEachRow.DataTable>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEachRow>
      </Sequence>
      <Sequence DisplayName="Get the relationship" sap:VirtualizedContainerService.HintSize="478.4,100.8" sap2010:WorkflowViewState.IdRef="Sequence_39">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If sap:VirtualizedContainerService.HintSize="468.8,686.4" sap2010:WorkflowViewState.IdRef="If_10">
          <If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_122">
                <CSharpValue.Result>
                  <OutArgument x:TypeArguments="x:Boolean" />
                </CSharpValue.Result>int.Parse(patientAge) &lt; 18</CSharpValue>
            </InArgument>
          </If.Condition>
          <If.Then>
            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,278.4" sap2010:WorkflowViewState.IdRef="Sequence_37">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_27">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_97">
                      <CSharpReference.Result>
                        <OutArgument x:TypeArguments="Location(x:String)" />
                      </CSharpReference.Result>relationship</CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">Child</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_28">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">
                    <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_98">
                      <CSharpReference.Result>
                        <OutArgument x:TypeArguments="Location(x:Boolean)" />
                      </CSharpReference.Result>isMinor</CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="467.2,278.4" sap2010:WorkflowViewState.IdRef="Sequence_38">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_29">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_99">
                      <CSharpReference.Result>
                        <OutArgument x:TypeArguments="Location(x:String)" />
                      </CSharpReference.Result>relationship</CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">Self</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_30">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">
                    <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_100">
                      <CSharpReference.Result>
                        <OutArgument x:TypeArguments="Location(x:Boolean)" />
                      </CSharpReference.Result>isMinor</CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </If.Else>
        </If>
      </Sequence>
      <Sequence DisplayName="Split the name into first and last" sap:VirtualizedContainerService.HintSize="478.4,100.8" sap2010:WorkflowViewState.IdRef="Sequence_40">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_31">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">
              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_101">
                <CSharpReference.Result>
                  <OutArgument x:TypeArguments="Location(x:String)" />
                </CSharpReference.Result>patientFName</CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_123">
                <CSharpValue.Result>
                  <OutArgument x:TypeArguments="x:String" />
                </CSharpValue.Result>System.Text.RegularExpressions.Regex.Match(patientName, @"^(?&lt;firstName&gt;\S+)").Groups["firstName"].Value;</CSharpValue>
            </InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_32">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">
              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_102">
                <CSharpReference.Result>
                  <OutArgument x:TypeArguments="Location(x:String)" />
                </CSharpReference.Result>patientLName</CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_124">
                <CSharpValue.Result>
                  <OutArgument x:TypeArguments="x:String" />
                </CSharpValue.Result>System.Text.RegularExpressions.Regex.Match(patientName, @"(?&lt;lastName&gt;\S+)$").Groups["lastName"].Value;</CSharpValue>
            </InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_33">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">
              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_103">
                <CSharpReference.Result>
                  <OutArgument x:TypeArguments="Location(x:String)" />
                </CSharpReference.Result>guardianFName</CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_125">
                <CSharpValue.Result>
                  <OutArgument x:TypeArguments="x:String" />
                </CSharpValue.Result>System.Text.RegularExpressions.Regex.Match(guardianName, @"^(?&lt;firstName&gt;\S+)").Groups["firstName"].Value;</CSharpValue>
            </InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_34">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">
              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_104">
                <CSharpReference.Result>
                  <OutArgument x:TypeArguments="Location(x:String)" />
                </CSharpReference.Result>guardianLName</CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_126">
                <CSharpValue.Result>
                  <OutArgument x:TypeArguments="x:String" />
                </CSharpValue.Result>System.Text.RegularExpressions.Regex.Match(guardianName, @"(?&lt;lastName&gt;\S+)$").Groups["lastName"].Value;</CSharpValue>
            </InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
      <Assign sap:VirtualizedContainerService.HintSize="478.4,113.6" sap2010:WorkflowViewState.IdRef="Assign_35">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">
            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_105">
              <CSharpReference.Result>
                <OutArgument x:TypeArguments="Location(x:String)" />
              </CSharpReference.Result>patientGender</CSharpReference>
          </OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_127">
              <CSharpValue.Result>
                <OutArgument x:TypeArguments="x:String" />
              </CSharpValue.Result>patientGender.Substring(0,1).ToUpper() == "M" ? "Male" : patientGender.Substring(0,1).ToUpper() == "F" ? "Female" : "Unknown";</CSharpValue>
          </InArgument>
        </Assign.Value>
      </Assign>
      <Sequence DisplayName="Card expiration Formatting" sap:VirtualizedContainerService.HintSize="478.4,100.8" sap2010:WorkflowViewState.IdRef="Sequence_41">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_36">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">
              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_106">
                <CSharpReference.Result>
                  <OutArgument x:TypeArguments="Location(x:String)" />
                </CSharpReference.Result>cardMonthExpiration</CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_128">
                <CSharpValue.Result>
                  <OutArgument x:TypeArguments="x:String" />
                </CSharpValue.Result>System.Text.RegularExpressions.Regex.Match(cardExpiration, @"^(?&lt;month&gt;\d{2})").Groups["month"].Value;</CSharpValue>
            </InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_37">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">
              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_107">
                <CSharpReference.Result>
                  <OutArgument x:TypeArguments="Location(x:String)" />
                </CSharpReference.Result>cardYearExpiration</CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_129">
                <CSharpValue.Result>
                  <OutArgument x:TypeArguments="x:String" />
                </CSharpValue.Result>"20" + System.Text.RegularExpressions.Regex.Match(cardExpiration, @"(?&lt;year&gt;\d{2})$").Groups["year"].Value;</CSharpValue>
            </InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_38">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">
              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_108">
                <CSharpReference.Result>
                  <OutArgument x:TypeArguments="Location(x:String)" />
                </CSharpReference.Result>cardType</CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_130">
                <CSharpValue.Result>
                  <OutArgument x:TypeArguments="x:String" />
                </CSharpValue.Result>cardNum.StartsWith("3") ? "AMEX" : cardNum.StartsWith("4") ? "VISA" : cardNum.StartsWith("5") ? "MASTERCARD" : cardNum.StartsWith("6") ? "DISCOVER" : "UNKNOWN"</CSharpValue>
            </InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="478.4,165.6" sap2010:WorkflowViewState.IdRef="LogMessage_10">
        <ui:LogMessage.Message>
          <InArgument x:TypeArguments="x:Object">
            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_131">
              <CSharpValue.Result>
                <OutArgument x:TypeArguments="x:Object" />
              </CSharpValue.Result>"Test"</CSharpValue>
          </InArgument>
        </ui:LogMessage.Message>
      </ui:LogMessage>
    </Sequence>
    <Sequence DisplayName="Insurance Card Information formatting" sap:VirtualizedContainerService.HintSize="555.2,2640.8" sap2010:WorkflowViewState.IdRef="Sequence_26">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="insName" />
        <Variable x:TypeArguments="x:String" Name="insMemberId" />
        <Variable x:TypeArguments="x:String" Name="insGroup" />
        <Variable x:TypeArguments="x:String" Name="insNetwork" />
        <Variable x:TypeArguments="x:String" Name="insPlan" />
        <Variable x:TypeArguments="x:String" Name="insSupportPhone" />
        <Variable x:TypeArguments="scg:List(x:String)" Name="providersList" />
        <Variable x:TypeArguments="x:String" Name="providerCode" />
        <Variable x:TypeArguments="x:String" Name="insProviderCode" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="504,336.8" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_45">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_109">
                    <CSharpReference.Result>
                      <OutArgument x:TypeArguments="Location(x:String)" />
                    </CSharpReference.Result>carrier</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_132">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>InsDocumentData.Data.Carrier.Value</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_46">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_110">
                    <CSharpReference.Result>
                      <OutArgument x:TypeArguments="Location(x:String)" />
                    </CSharpReference.Result>insName</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_133">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>InsDocumentData.Data.MemberName.Value</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_47">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_111">
                    <CSharpReference.Result>
                      <OutArgument x:TypeArguments="Location(x:String)" />
                    </CSharpReference.Result>insMemberId</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_134">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>InsDocumentData.Data.MemberID.Value</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_48">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_112">
                    <CSharpReference.Result>
                      <OutArgument x:TypeArguments="Location(x:String)" />
                    </CSharpReference.Result>insGroup</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_135">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>InsDocumentData.Data.GroupNumber.Value</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_49">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_113">
                    <CSharpReference.Result>
                      <OutArgument x:TypeArguments="Location(x:String)" />
                    </CSharpReference.Result>insNetwork</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_136">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>InsDocumentData.Data.Network.Value</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_50">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_114">
                    <CSharpReference.Result>
                      <OutArgument x:TypeArguments="Location(x:String)" />
                    </CSharpReference.Result>insPlan</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_137">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>InsDocumentData.Data.Plan.Value</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_51">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_115">
                    <CSharpReference.Result>
                      <OutArgument x:TypeArguments="Location(x:String)" />
                    </CSharpReference.Result>insSupportPhone</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_138">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>InsDocumentData.Data.CustomerSupportPhone.Value</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
      </ui:MultipleAssign>
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="504,970.4" sap2010:WorkflowViewState.IdRef="ForEachRow_5">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="502.4,788.8" sap2010:WorkflowViewState.IdRef="Sequence_27">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="key" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="468.8,113.6" sap2010:WorkflowViewState.IdRef="Assign_39">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_116">
                      <CSharpReference.Result>
                        <OutArgument x:TypeArguments="Location(x:String)" />
                      </CSharpReference.Result>key</CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_140">
                      <CSharpValue.Result>
                        <OutArgument x:TypeArguments="x:String" />
                      </CSharpValue.Result>CurrentRow["Key"].ToString()</CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
              <If sap:VirtualizedContainerService.HintSize="468.8,615.2" sap2010:WorkflowViewState.IdRef="If_9">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_141">
                      <CSharpValue.Result>
                        <OutArgument x:TypeArguments="x:Boolean" />
                      </CSharpValue.Result>carrier.IndexOf(key, StringComparison.OrdinalIgnoreCase) &gt;= 0</CSharpValue>
                  </InArgument>
                </If.Condition>
                <If.Then>
                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,396" sap2010:WorkflowViewState.IdRef="Sequence_42">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_40">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_117">
                            <CSharpReference.Result>
                              <OutArgument x:TypeArguments="Location(x:String)" />
                            </CSharpReference.Result>carrier</CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_142">
                            <CSharpValue.Result>
                              <OutArgument x:TypeArguments="x:String" />
                            </CSharpValue.Result>CurrentRow["Carrier"].ToString()</CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.6,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_12">
                      <ui:LogMessage.Message>
                        <InArgument x:TypeArguments="x:Object">
                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_143">
                            <CSharpValue.Result>
                              <OutArgument x:TypeArguments="x:Object" />
                            </CSharpValue.Result>"Found the carrier it is: " + carrier</CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Message>
                    </ui:LogMessage>
                    <ui:Break sap:VirtualizedContainerService.HintSize="433.6,48" sap2010:WorkflowViewState.IdRef="Break_4" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="467.2,89.6" sap2010:WorkflowViewState.IdRef="Sequence_43">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
        <ui:ForEachRow.DataTable>
          <InArgument x:TypeArguments="sd:DataTable">
            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_139">
              <CSharpValue.Result>
                <OutArgument x:TypeArguments="sd:DataTable" />
              </CSharpValue.Result>carrierDT</CSharpValue>
          </InArgument>
        </ui:ForEachRow.DataTable>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachRow>
      <ui:FilterDataTable DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="504,194.4" sap2010:WorkflowViewState.IdRef="FilterDataTable_3" SelectColumnsMode="Remove">
        <ui:FilterDataTable.DataTable>
          <InArgument x:TypeArguments="sd:DataTable">
            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_152">
              <CSharpValue.Result>
                <OutArgument x:TypeArguments="sd:DataTable" />
              </CSharpValue.Result>providerServices</CSharpValue>
          </InArgument>
        </ui:FilterDataTable.DataTable>
        <ui:FilterDataTable.Filters>
          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
            <ui:FilterOperationArgument BooleanOperator="And" Operator="LT">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_144">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>"Age Min"</CSharpValue>
                </InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_145">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:Int32" />
                    </CSharpValue.Result>int.Parse(patientAge)</CSharpValue>
                </InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
            <ui:FilterOperationArgument BooleanOperator="And" Operator="GT">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_146">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>"Age Max"</CSharpValue>
                </InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_147">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:Int32" />
                    </CSharpValue.Result>int.Parse(patientAge)</CSharpValue>
                </InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
            <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_148">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>carrier</CSharpValue>
                </InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_149">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>"X"</CSharpValue>
                </InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
            <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_150">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>serviceType</CSharpValue>
                </InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_151">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>"X"</CSharpValue>
                </InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
          </scg:List>
        </ui:FilterDataTable.Filters>
        <ui:FilterDataTable.OutputDataTable>
          <OutArgument x:TypeArguments="sd:DataTable">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_118">
              <CSharpReference.Result>
                <OutArgument x:TypeArguments="Location(sd:DataTable)" />
              </CSharpReference.Result>providerServices</CSharpReference>
          </OutArgument>
        </ui:FilterDataTable.OutputDataTable>
        <ui:FilterDataTable.SelectColumns>
          <scg:List x:TypeArguments="InArgument" Capacity="4">
            <x:Null />
          </scg:List>
        </ui:FilterDataTable.SelectColumns>
      </ui:FilterDataTable>
      <Assign sap:VirtualizedContainerService.HintSize="504,113.6" sap2010:WorkflowViewState.IdRef="Assign_41">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(x:String)">
            <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_119">
              <CSharpReference.Result>
                <OutArgument x:TypeArguments="Location(scg:List(x:String))" />
              </CSharpReference.Result>providersList</CSharpReference>
          </OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(x:String)">
            <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_153">
              <CSharpValue.Result>
                <OutArgument x:TypeArguments="scg:List(x:String)" />
              </CSharpValue.Result>new List&lt;string&gt;()</CSharpValue>
          </InArgument>
        </Assign.Value>
      </Assign>
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="504,346.4" sap2010:WorkflowViewState.IdRef="ForEachRow_6">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="467.2,164.8" sap2010:WorkflowViewState.IdRef="Sequence_44">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_42">
                <Assign.To>
                  <OutArgument x:TypeArguments="scg:List(x:String)">
                    <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_120">
                      <CSharpReference.Result>
                        <OutArgument x:TypeArguments="Location(scg:List(x:String))" />
                      </CSharpReference.Result>providersList</CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="scg:List(x:String)">
                    <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_155">
                      <CSharpValue.Result>
                        <OutArgument x:TypeArguments="scg:List(x:String)" />
                      </CSharpValue.Result>providersList.Concat(new[] { CurrentRow[0].ToString() }).ToList()</CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
        <ui:ForEachRow.DataTable>
          <InArgument x:TypeArguments="sd:DataTable">
            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_154">
              <CSharpValue.Result>
                <OutArgument x:TypeArguments="sd:DataTable" />
              </CSharpValue.Result>providerServices</CSharpValue>
          </InArgument>
        </ui:ForEachRow.DataTable>
      </ui:ForEachRow>
      <ui:FilterDataTable DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="504,194.4" sap2010:WorkflowViewState.IdRef="FilterDataTable_4" SelectColumnsMode="Remove">
        <ui:FilterDataTable.DataTable>
          <InArgument x:TypeArguments="sd:DataTable">
            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_158">
              <CSharpValue.Result>
                <OutArgument x:TypeArguments="sd:DataTable" />
              </CSharpValue.Result>providerInsurance</CSharpValue>
          </InArgument>
        </ui:FilterDataTable.DataTable>
        <ui:FilterDataTable.Filters>
          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
            <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_156">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>"Provider Name"</CSharpValue>
                </InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_157">
                    <CSharpValue.Result>
                      <OutArgument x:TypeArguments="x:String" />
                    </CSharpValue.Result>providersList[0]</CSharpValue>
                </InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
          </scg:List>
        </ui:FilterDataTable.Filters>
        <ui:FilterDataTable.OutputDataTable>
          <OutArgument x:TypeArguments="sd:DataTable">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_121">
              <CSharpReference.Result>
                <OutArgument x:TypeArguments="Location(sd:DataTable)" />
              </CSharpReference.Result>providerInsurance</CSharpReference>
          </OutArgument>
        </ui:FilterDataTable.OutputDataTable>
        <ui:FilterDataTable.SelectColumns>
          <scg:List x:TypeArguments="InArgument" Capacity="4">
            <x:Null />
          </scg:List>
        </ui:FilterDataTable.SelectColumns>
      </ui:FilterDataTable>
      <Assign sap:VirtualizedContainerService.HintSize="504,113.6" sap2010:WorkflowViewState.IdRef="Assign_23">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">
            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_122">
              <CSharpReference.Result>
                <OutArgument x:TypeArguments="Location(x:String)" />
              </CSharpReference.Result>providerCode</CSharpReference>
          </OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_166">providerInsurance.Rows[0]["Insurance Pay"].ToString()</CSharpValue>
          </InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="504,113.6" sap2010:WorkflowViewState.IdRef="Assign_24">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">
            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_123">
              <CSharpReference.Result>
                <OutArgument x:TypeArguments="Location(x:String)" />
              </CSharpReference.Result>insProviderCode</CSharpReference>
          </OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_167">providerInsurance.Rows[0][carrier].ToString()</CSharpValue>
          </InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="504,165.6" sap2010:WorkflowViewState.IdRef="LogMessage_13">
        <ui:LogMessage.Message>
          <InArgument x:TypeArguments="x:Object">
            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_161">
              <CSharpValue.Result>
                <OutArgument x:TypeArguments="x:Object" />
              </CSharpValue.Result>"Complete"</CSharpValue>
          </InArgument>
        </ui:LogMessage.Message>
      </ui:LogMessage>
    </Sequence>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="555.2,262.4" sap2010:WorkflowViewState.IdRef="CommentOut_3">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="483.2,152" sap2010:WorkflowViewState.IdRef="Sequence_45">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Insurance Card Information formatting" sap:VirtualizedContainerService.HintSize="449.6,92" sap2010:WorkflowViewState.IdRef="Sequence_22">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="insName" />
              <Variable x:TypeArguments="x:String" Name="insMemberId" />
              <Variable x:TypeArguments="x:String" Name="insGroup" />
              <Variable x:TypeArguments="x:String" Name="insNetwork" />
              <Variable x:TypeArguments="x:String" Name="insPlan" />
              <Variable x:TypeArguments="x:String" Name="insSupportPhone" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="478.4,336.8" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_54">carrier</CSharpReference>
                      </OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_50">ExtractionResults.Data.Carrier.Value</CSharpValue>
                      </InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_44">insName</CSharpReference>
                      </OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_51">ExtractionResults.Data.MemberName.Value</CSharpValue>
                      </InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_20">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_45">insMemberId</CSharpReference>
                      </OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_52">ExtractionResults.Data.MemberID.Value</CSharpValue>
                      </InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_21">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_46">insGroup</CSharpReference>
                      </OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_53">ExtractionResults.Data.GroupNumber.Value</CSharpValue>
                      </InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_22">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_47">insNetwork</CSharpReference>
                      </OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_54">ExtractionResults.Data.Network.Value</CSharpValue>
                      </InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_23">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_48">insPlan</CSharpReference>
                      </OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_55">ExtractionResults.Data.Plan.Value</CSharpValue>
                      </InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_24">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_49">insSupportPhone</CSharpReference>
                      </OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_56">ExtractionResults.Data.CustomerSupportPhone.Value</CSharpValue>
                      </InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
            </ui:MultipleAssign>
            <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="478.4,84.8" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="502.4,790.4" sap2010:WorkflowViewState.IdRef="Sequence_12">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="key" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="468.8,113.6" sap2010:WorkflowViewState.IdRef="Assign_15">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_51">key</CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_58">CurrentRow["Key"].ToString()</CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <If sap:VirtualizedContainerService.HintSize="468.8,616.8" sap2010:WorkflowViewState.IdRef="If_3">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_59">carrier.IndexOf(key, StringComparison.OrdinalIgnoreCase) &gt;= 0</CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <If.Then>
                        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,396" sap2010:WorkflowViewState.IdRef="Sequence_13">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_14">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_55">carrier</CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_60">CurrentRow["Carrier"].ToString()</CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.6,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_6">
                            <ui:LogMessage.Message>
                              <InArgument x:TypeArguments="x:Object">
                                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_61">"Found the carrier it is: " + carrier</CSharpValue>
                              </InArgument>
                            </ui:LogMessage.Message>
                          </ui:LogMessage>
                          <ui:Break sap:VirtualizedContainerService.HintSize="433.6,48" sap2010:WorkflowViewState.IdRef="Break_1" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="467.2,91.2" sap2010:WorkflowViewState.IdRef="Sequence_14">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
              <ui:ForEachRow.DataTable>
                <InArgument x:TypeArguments="sd:DataTable">
                  <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_57">carrierDT</CSharpValue>
                </InArgument>
              </ui:ForEachRow.DataTable>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEachRow>
            <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="478.4,180" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_25">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_56">patientAge</CSharpReference>
                      </OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">12</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_26">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_57">testType</CSharpReference>
                      </OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">ASD</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
            </ui:MultipleAssign>
            <ui:FilterDataTable DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="478.4,194.4" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" SelectColumnsMode="Remove">
              <ui:FilterDataTable.DataTable>
                <InArgument x:TypeArguments="sd:DataTable">
                  <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_70">providerServices</CSharpValue>
                </InArgument>
              </ui:FilterDataTable.DataTable>
              <ui:FilterDataTable.Filters>
                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                  <ui:FilterOperationArgument BooleanOperator="And" Operator="LT">
                    <ui:FilterOperationArgument.Column>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_62">"Age Min"</CSharpValue>
                      </InArgument>
                    </ui:FilterOperationArgument.Column>
                    <ui:FilterOperationArgument.Operand>
                      <InArgument x:TypeArguments="x:Int32">
                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_63">int.Parse(patientAge)</CSharpValue>
                      </InArgument>
                    </ui:FilterOperationArgument.Operand>
                  </ui:FilterOperationArgument>
                  <ui:FilterOperationArgument BooleanOperator="And" Operator="GT">
                    <ui:FilterOperationArgument.Column>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_64">"Age Max"</CSharpValue>
                      </InArgument>
                    </ui:FilterOperationArgument.Column>
                    <ui:FilterOperationArgument.Operand>
                      <InArgument x:TypeArguments="x:Int32">
                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_65">int.Parse(patientAge)</CSharpValue>
                      </InArgument>
                    </ui:FilterOperationArgument.Operand>
                  </ui:FilterOperationArgument>
                  <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                    <ui:FilterOperationArgument.Column>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_66">carrier</CSharpValue>
                      </InArgument>
                    </ui:FilterOperationArgument.Column>
                    <ui:FilterOperationArgument.Operand>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_67">"X"</CSharpValue>
                      </InArgument>
                    </ui:FilterOperationArgument.Operand>
                  </ui:FilterOperationArgument>
                  <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                    <ui:FilterOperationArgument.Column>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_68">testType</CSharpValue>
                      </InArgument>
                    </ui:FilterOperationArgument.Column>
                    <ui:FilterOperationArgument.Operand>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_69">"X"</CSharpValue>
                      </InArgument>
                    </ui:FilterOperationArgument.Operand>
                  </ui:FilterOperationArgument>
                </scg:List>
              </ui:FilterDataTable.Filters>
              <ui:FilterDataTable.OutputDataTable>
                <OutArgument x:TypeArguments="sd:DataTable">
                  <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_59">providerServices</CSharpReference>
                </OutArgument>
              </ui:FilterDataTable.OutputDataTable>
              <ui:FilterDataTable.SelectColumns>
                <scg:List x:TypeArguments="InArgument" Capacity="4">
                  <x:Null />
                </scg:List>
              </ui:FilterDataTable.SelectColumns>
            </ui:FilterDataTable>
            <Assign sap:VirtualizedContainerService.HintSize="478.4,113.6" sap2010:WorkflowViewState.IdRef="Assign_18">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:List(x:String)">
                  <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_61">providersList</CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:List(x:String)">
                  <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_75">new List&lt;string&gt;()</CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEachRow ColumnNames="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="478.4,346.4" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="467.2,164.8" sap2010:WorkflowViewState.IdRef="Sequence_15">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_17">
                      <Assign.To>
                        <OutArgument x:TypeArguments="scg:List(x:String)">
                          <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_60">providersList</CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="scg:List(x:String)">
                          <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_74">providersList.Concat(new[] { CurrentRow[0].ToString() }).ToList()</CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
              <ui:ForEachRow.CurrentIndex>
                <OutArgument x:TypeArguments="x:Int32">
                  <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_64">index_1</CSharpReference>
                </OutArgument>
              </ui:ForEachRow.CurrentIndex>
              <ui:ForEachRow.DataTable>
                <InArgument x:TypeArguments="sd:DataTable">
                  <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_72">providerServices</CSharpValue>
                </InArgument>
              </ui:ForEachRow.DataTable>
            </ui:ForEachRow>
            <ui:FilterDataTable DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="478.4,194.4" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" SelectColumnsMode="Remove">
              <ui:FilterDataTable.DataTable>
                <InArgument x:TypeArguments="sd:DataTable">
                  <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_78">providerInsurance</CSharpValue>
                </InArgument>
              </ui:FilterDataTable.DataTable>
              <ui:FilterDataTable.Filters>
                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                  <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                    <ui:FilterOperationArgument.Column>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_76">"Provider Name"</CSharpValue>
                      </InArgument>
                    </ui:FilterOperationArgument.Column>
                    <ui:FilterOperationArgument.Operand>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_79">providersList[0]</CSharpValue>
                      </InArgument>
                    </ui:FilterOperationArgument.Operand>
                  </ui:FilterOperationArgument>
                </scg:List>
              </ui:FilterDataTable.Filters>
              <ui:FilterDataTable.OutputDataTable>
                <OutArgument x:TypeArguments="sd:DataTable">
                  <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_63">providerInsurance</CSharpReference>
                </OutArgument>
              </ui:FilterDataTable.OutputDataTable>
              <ui:FilterDataTable.SelectColumns>
                <scg:List x:TypeArguments="InArgument" Capacity="4">
                  <x:Null />
                </scg:List>
              </ui:FilterDataTable.SelectColumns>
            </ui:FilterDataTable>
            <Assign sap:VirtualizedContainerService.HintSize="478.4,113.6" sap2010:WorkflowViewState.IdRef="Assign_19">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_67">providerCode</CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_80">providerInsurance.Rows[0]["Insurance Pay"].ToString()</CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="478.4,104.8" sap2010:WorkflowViewState.IdRef="Assign_20">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_68">insProviderCode</CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_81">providerInsurance.Rows[0][carrier].ToString()</CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <Sequence sap:VirtualizedContainerService.HintSize="555.2,92" sap2010:WorkflowViewState.IdRef="Sequence_21">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Format intake information" sap:VirtualizedContainerService.HintSize="571.2,2596" sap2010:WorkflowViewState.IdRef="Sequence_2">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="patientName" />
          <Variable x:TypeArguments="x:String" Name="patientDOB" />
          <Variable x:TypeArguments="x:String" Name="patientAge" />
          <Variable x:TypeArguments="x:String" Name="patientGender" />
          <Variable x:TypeArguments="x:Boolean" Name="isMinor" />
          <Variable x:TypeArguments="x:String" Name="address" />
          <Variable x:TypeArguments="x:String" Name="city" />
          <Variable x:TypeArguments="x:String" Name="state" />
          <Variable x:TypeArguments="x:String" Name="email" />
          <Variable x:TypeArguments="x:String" Name="phone" />
          <Variable x:TypeArguments="x:String" Name="guardianName" />
          <Variable x:TypeArguments="x:String" Name="relationship" />
          <Variable x:TypeArguments="x:String" Name="cardNum" />
          <Variable x:TypeArguments="x:String" Name="cvv" />
          <Variable x:TypeArguments="x:String" Name="cardExpiration" />
          <Variable x:TypeArguments="x:String" Name="zipCode" />
          <Variable x:TypeArguments="x:String" Name="guardianLName" />
          <Variable x:TypeArguments="x:String" Name="guardianFName" />
          <Variable x:TypeArguments="x:String" Name="patientLName" />
          <Variable x:TypeArguments="x:String" Name="patientFName" />
          <Variable x:TypeArguments="x:String" Name="cardYearExpiration" />
          <Variable x:TypeArguments="x:String" Name="cardType" />
          <Variable x:TypeArguments="x:String" Name="cardMonthExpiration" />
          <Variable x:TypeArguments="x:String" Name="serviceType" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="537.6,554.4" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
          <ui:MultipleAssign.AssignOperations>
            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="32">
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">
                      <CSharpReference.Result>
                        <OutArgument x:TypeArguments="Location(x:String)" />
                      </CSharpReference.Result>patientName</CSharpReference>
                  </OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">
                      <CSharpValue.Result>
                        <OutArgument x:TypeArguments="x:String" />
                      </CSharpValue.Result>ExtractionResults.Data.Name.Value</CSharpValue>
                  </InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">
                      <CSharpReference.Result>
                        <OutArgument x:TypeArguments="Location(x:String)" />
                      </CSharpReference.Result>patientGender</CSharpReference>
                  </OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">
                      <CSharpValue.Result>
                        <OutArgument x:TypeArguments="x:String" />
                      </CSharpValue.Result>ExtractionResults.Data.Gender.Value</CSharpValue>
                  </InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">
                      <CSharpReference.Result>
                        <OutArgument x:TypeArguments="Location(x:String)" />
                      </CSharpReference.Result>patientDOB</CSharpReference>
                  </OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24">
                      <CSharpValue.Result>
                        <OutArgument x:TypeArguments="x:String" />
                      </CSharpValue.Result>ExtractionResults.Data.DateOfBirth.Value</CSharpValue>
                  </InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_58">
                      <CSharpReference.Result>
                        <OutArgument x:TypeArguments="Location(x:String)" />
                      </CSharpReference.Result>patientAge</CSharpReference>
                  </OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">
                      <CSharpValue.Result>
                        <OutArgument x:TypeArguments="x:String" />
                      </CSharpValue.Result>ExtractionResults.Data.Age.Value</CSharpValue>
                  </InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">
                      <CSharpReference.Result>
                        <OutArgument x:TypeArguments="Location(x:String)" />
                      </CSharpReference.Result>address</CSharpReference>
                  </OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">
                      <CSharpValue.Result>
                        <OutArgument x:TypeArguments="x:String" />
                      </CSharpValue.Result>ExtractionResults.Data.Address.Value</CSharpValue>
                  </InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">
                      <CSharpReference.Result>
                        <OutArgument x:TypeArguments="Location(x:String)" />
                      </CSharpReference.Result>city</CSharpReference>
                  </OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">
                      <CSharpValue.Result>
                        <OutArgument x:TypeArguments="x:String" />
                      </CSharpValue.Result>ExtractionResults.Data.City.Value</CSharpValue>
                  </InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">
                      <CSharpReference.Result>
                        <OutArgument x:TypeArguments="Location(x:String)" />
                      </CSharpReference.Result>state</CSharpReference>
                  </OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">
                      <CSharpValue.Result>
                        <OutArgument x:TypeArguments="x:String" />
                      </CSharpValue.Result>ExtractionResults.Data.State.Value</CSharpValue>
                  </InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">
                      <CSharpReference.Result>
                        <OutArgument x:TypeArguments="Location(x:String)" />
                      </CSharpReference.Result>email</CSharpReference>
                  </OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_30">
                      <CSharpValue.Result>
                        <OutArgument x:TypeArguments="x:String" />
                      </CSharpValue.Result>ExtractionResults.Data.EmailAddress.Value</CSharpValue>
                  </InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">
                      <CSharpReference.Result>
                        <OutArgument x:TypeArguments="Location(x:String)" />
                      </CSharpReference.Result>phone</CSharpReference>
                  </OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">
                      <CSharpValue.Result>
                        <OutArgument x:TypeArguments="x:String" />
                      </CSharpValue.Result>ExtractionResults.Data.CellPhone.Value</CSharpValue>
                  </InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">
                      <CSharpReference.Result>
                        <OutArgument x:TypeArguments="Location(x:String)" />
                      </CSharpReference.Result>guardianName</CSharpReference>
                  </OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">
                      <CSharpValue.Result>
                        <OutArgument x:TypeArguments="x:String" />
                      </CSharpValue.Result>ExtractionResults.Data.ParentsName.Value</CSharpValue>
                  </InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">
                      <CSharpReference.Result>
                        <OutArgument x:TypeArguments="Location(x:String)" />
                      </CSharpReference.Result>cardNum</CSharpReference>
                  </OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">
                      <CSharpValue.Result>
                        <OutArgument x:TypeArguments="x:String" />
                      </CSharpValue.Result>ExtractionResults.Data.CCNumber.Value</CSharpValue>
                  </InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_19">
                      <CSharpReference.Result>
                        <OutArgument x:TypeArguments="Location(x:String)" />
                      </CSharpReference.Result>cvv</CSharpReference>
                  </OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_34">
                      <CSharpValue.Result>
                        <OutArgument x:TypeArguments="x:String" />
                      </CSharpValue.Result>ExtractionResults.Data.CCCVV.Value</CSharpValue>
                  </InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_21">
                      <CSharpReference.Result>
                        <OutArgument x:TypeArguments="Location(x:String)" />
                      </CSharpReference.Result>cardExpiration</CSharpReference>
                  </OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">
                      <CSharpValue.Result>
                        <OutArgument x:TypeArguments="x:String" />
                      </CSharpValue.Result>ExtractionResults.Data.CCExpirationDate.Value</CSharpValue>
                  </InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_27">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_124">
                      <CSharpReference.Result>
                        <OutArgument x:TypeArguments="Location(x:String)" />
                      </CSharpReference.Result>serviceType</CSharpReference>
                  </OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_82">
                      <CSharpValue.Result>
                        <OutArgument x:TypeArguments="x:String" />
                      </CSharpValue.Result>ExtractionResults.Data.ServiceType.Value</CSharpValue>
                  </InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
            </scg:List>
          </ui:MultipleAssign.AssignOperations>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:MultipleAssign>
        <Sequence DisplayName="Get the appointment Type" sap:VirtualizedContainerService.HintSize="537.6,1053.6" sap2010:WorkflowViewState.IdRef="Sequence_16">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="504,961.6" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="502.4,788.8" sap2010:WorkflowViewState.IdRef="Sequence_17">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="key" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="468.8,113.6" sap2010:WorkflowViewState.IdRef="Assign_21">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_71">
                          <CSharpReference.Result>
                            <OutArgument x:TypeArguments="Location(x:String)" />
                          </CSharpReference.Result>key</CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_84">
                          <CSharpValue.Result>
                            <OutArgument x:TypeArguments="x:String" />
                          </CSharpValue.Result>CurrentRow["Key"].ToString()</CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                  <If sap:VirtualizedContainerService.HintSize="468.8,615.2" sap2010:WorkflowViewState.IdRef="If_4">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_85">
                          <CSharpValue.Result>
                            <OutArgument x:TypeArguments="x:Boolean" />
                          </CSharpValue.Result>serviceType.IndexOf(key, StringComparison.OrdinalIgnoreCase) &gt;= 0</CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,396" sap2010:WorkflowViewState.IdRef="Sequence_18">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_22">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_125">
                                <CSharpReference.Result>
                                  <OutArgument x:TypeArguments="Location(x:String)" />
                                </CSharpReference.Result>serviceType</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_86">
                                <CSharpValue.Result>
                                  <OutArgument x:TypeArguments="x:String" />
                                </CSharpValue.Result>CurrentRow["Appointment Type"].ToString()</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.6,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_8">
                          <ui:LogMessage.Message>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_87">
                                <CSharpValue.Result>
                                  <OutArgument x:TypeArguments="x:Object" />
                                </CSharpValue.Result>"Found the service type it is: " + serviceType</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Message>
                        </ui:LogMessage>
                        <ui:Break sap:VirtualizedContainerService.HintSize="433.6,48" sap2010:WorkflowViewState.IdRef="Break_2" />
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="467.2,89.6" sap2010:WorkflowViewState.IdRef="Sequence_19">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <ui:ForEachRow.DataTable>
              <InArgument x:TypeArguments="sd:DataTable">
                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_90">
                  <CSharpValue.Result>
                    <OutArgument x:TypeArguments="sd:DataTable" />
                  </CSharpValue.Result>appointmentTypeDT</CSharpValue>
              </InArgument>
            </ui:ForEachRow.DataTable>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
        </Sequence>
        <Sequence DisplayName="Get the relationship" sap:VirtualizedContainerService.HintSize="537.6,100.8" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If sap:VirtualizedContainerService.HintSize="468.8,686.4" sap2010:WorkflowViewState.IdRef="If_1">
            <If.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">
                  <CSharpValue.Result>
                    <OutArgument x:TypeArguments="x:Boolean" />
                  </CSharpValue.Result>int.Parse(patientAge) &lt; 18</CSharpValue>
              </InArgument>
            </If.Condition>
            <If.Then>
              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,278.4" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_1">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_23">
                        <CSharpReference.Result>
                          <OutArgument x:TypeArguments="Location(x:String)" />
                        </CSharpReference.Result>relationship</CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Child</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_2">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">
                      <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_24">
                        <CSharpReference.Result>
                          <OutArgument x:TypeArguments="Location(x:Boolean)" />
                        </CSharpReference.Result>isMinor</CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="467.2,278.4" sap2010:WorkflowViewState.IdRef="Sequence_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_3">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_25">
                        <CSharpReference.Result>
                          <OutArgument x:TypeArguments="Location(x:String)" />
                        </CSharpReference.Result>relationship</CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Self</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_4">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">
                      <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_26">
                        <CSharpReference.Result>
                          <OutArgument x:TypeArguments="Location(x:Boolean)" />
                        </CSharpReference.Result>isMinor</CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
        <Sequence DisplayName="Split the name into first and last" sap:VirtualizedContainerService.HintSize="537.6,100.8" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_5">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_35">
                  <CSharpReference.Result>
                    <OutArgument x:TypeArguments="Location(x:String)" />
                  </CSharpReference.Result>patientFName</CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_37">
                  <CSharpValue.Result>
                    <OutArgument x:TypeArguments="x:String" />
                  </CSharpValue.Result>System.Text.RegularExpressions.Regex.Match(patientName, @"^(?&lt;firstName&gt;\S+)").Groups["firstName"].Value;</CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_6">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_36">
                  <CSharpReference.Result>
                    <OutArgument x:TypeArguments="Location(x:String)" />
                  </CSharpReference.Result>patientLName</CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_38">
                  <CSharpValue.Result>
                    <OutArgument x:TypeArguments="x:String" />
                  </CSharpValue.Result>System.Text.RegularExpressions.Regex.Match(patientName, @"(?&lt;lastName&gt;\S+)$").Groups["lastName"].Value;</CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_7">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_37">
                  <CSharpReference.Result>
                    <OutArgument x:TypeArguments="Location(x:String)" />
                  </CSharpReference.Result>guardianFName</CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39">
                  <CSharpValue.Result>
                    <OutArgument x:TypeArguments="x:String" />
                  </CSharpValue.Result>System.Text.RegularExpressions.Regex.Match(guardianName, @"^(?&lt;firstName&gt;\S+)").Groups["firstName"].Value;</CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_8">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_38">
                  <CSharpReference.Result>
                    <OutArgument x:TypeArguments="Location(x:String)" />
                  </CSharpReference.Result>guardianLName</CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_40">
                  <CSharpValue.Result>
                    <OutArgument x:TypeArguments="x:String" />
                  </CSharpValue.Result>System.Text.RegularExpressions.Regex.Match(guardianName, @"(?&lt;lastName&gt;\S+)$").Groups["lastName"].Value;</CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
        <Assign sap:VirtualizedContainerService.HintSize="537.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_12">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">
              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_34">
                <CSharpReference.Result>
                  <OutArgument x:TypeArguments="Location(x:String)" />
                </CSharpReference.Result>patientGender</CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45">
                <CSharpValue.Result>
                  <OutArgument x:TypeArguments="x:String" />
                </CSharpValue.Result>patientGender.Substring(0,1).ToUpper() == "M" ? "Male" : patientGender.Substring(0,1).ToUpper() == "F" ? "Female" : "Unknown";</CSharpValue>
            </InArgument>
          </Assign.Value>
        </Assign>
        <Sequence DisplayName="Card expiration Formatting" sap:VirtualizedContainerService.HintSize="537.6,424" sap2010:WorkflowViewState.IdRef="Sequence_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_9">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_39">
                  <CSharpReference.Result>
                    <OutArgument x:TypeArguments="Location(x:String)" />
                  </CSharpReference.Result>cardMonthExpiration</CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_41">
                  <CSharpValue.Result>
                    <OutArgument x:TypeArguments="x:String" />
                  </CSharpValue.Result>System.Text.RegularExpressions.Regex.Match(cardExpiration, @"^(?&lt;month&gt;\d{2})").Groups["month"].Value;</CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_10">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_40">
                  <CSharpReference.Result>
                    <OutArgument x:TypeArguments="Location(x:String)" />
                  </CSharpReference.Result>cardYearExpiration</CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_42">
                  <CSharpValue.Result>
                    <OutArgument x:TypeArguments="x:String" />
                  </CSharpValue.Result>"20" + System.Text.RegularExpressions.Regex.Match(cardExpiration, @"(?&lt;year&gt;\d{2})$").Groups["year"].Value;</CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_11">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_41">
                  <CSharpReference.Result>
                    <OutArgument x:TypeArguments="Location(x:String)" />
                  </CSharpReference.Result>cardType</CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_43">
                  <CSharpValue.Result>
                    <OutArgument x:TypeArguments="x:String" />
                  </CSharpValue.Result>cardNum.StartsWith("3") ? "AMEX" : cardNum.StartsWith("4") ? "VISA" : cardNum.StartsWith("5") ? "MASTERCARD" : cardNum.StartsWith("6") ? "DISCOVER" : "UNKNOWN"</CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="537.6,165.6" sap2010:WorkflowViewState.IdRef="LogMessage_4">
          <ui:LogMessage.Message>
            <InArgument x:TypeArguments="x:Object">
              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">
                <CSharpValue.Result>
                  <OutArgument x:TypeArguments="x:Object" />
                </CSharpValue.Result>"Test"</CSharpValue>
            </InArgument>
          </ui:LogMessage.Message>
        </ui:LogMessage>
      </Sequence>
    </Sequence>
  </Sequence>
</Activity>