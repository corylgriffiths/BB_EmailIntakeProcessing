<Activity mc:Ignorable="sap sap2010" x:Class="Gmail_GetIntakeEmails" this:Gmail_GetIntakeEmails.in_folderPath="Data\" this:Gmail_GetIntakeEmails.in_InsBackId="b3ebdb94-8f0a-f011-90cd-002248237549" this:Gmail_GetIntakeEmails.in_InsFrontId="8ee698e1-810a-f011-90cd-002248237549" this:Gmail_GetIntakeEmails.in_FormId="bd530ee5-1a0b-f011-90cd-002248237549" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=System.Private.CoreLib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:uga="clr-namespace:UiPath.GSuite.Activities;assembly=UiPath.GSuite.Activities" xmlns:ugage="clr-namespace:UiPath.GSuite.Activities.Gmail.Enums;assembly=UiPath.GSuite.Activities" xmlns:ugagf="clr-namespace:UiPath.GSuite.Activities.Gmail.Filters;assembly=UiPath.GSuite.Activities" xmlns:ugagm="clr-namespace:UiPath.GSuite.Activities.Gmail.Models;assembly=UiPath.GSuite.Activities" xmlns:uggm="clr-namespace:UiPath.GSuite.Gmail.Models;assembly=UiPath.GSuite" xmlns:ugm="clr-namespace:UiPath.GSuite.Models;assembly=UiPath.GSuite" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uisad="clr-namespace:UiPath.IntelligentOCR.StudioWeb.Activities.DocumentClassification;assembly=UiPath.IntelligentOCR.StudioWeb.Activities" xmlns:uisad1="clr-namespace:UiPath.IntelligentOCR.StudioWeb.Activities.DataExtraction;assembly=UiPath.IntelligentOCR.StudioWeb.Activities" xmlns:uisaseib="clr-namespace:UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.ExtendedExtractionResultsForDocumentData.IntakesInsuranceCardV1.Bundle;assembly=ExtendedExtractionRe.uLsAD1JhLTS1BlEEcgTk4G1" xmlns:uisaseib1="clr-namespace:UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.ExtendedExtractionResultsForDocumentData.IntakesInsuranceCardBackV1.Bundle;assembly=ExtendedExtractionRe.py4ZZ2TY3jG1uUUFC4ledqr" xmlns:uisaseib2="clr-namespace:UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.ExtendedExtractionResultsForDocumentData.IntakesIntakeFormV1.Bundle;assembly=ExtendedExtractionRe.OrYib2h3K5E1bg1ax2mGozZ4" xmlns:upr="clr-namespace:UiPath.Platform.ResourceHandling;assembly=UiPath.Platform" xmlns:usau="clr-namespace:UiPath.Shared.Activities.Utils;assembly=UiPath.GSuite.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_folderPath" Type="InArgument(x:String)" />
    <x:Property Name="in_InsBackId" Type="InArgument(x:String)" />
    <x:Property Name="in_InsFrontId" Type="InArgument(x:String)" />
    <x:Property Name="in_FormId" Type="InArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.GSuite.Activities.Gmail.Models</x:String>
      <x:String>UiPath.GSuite.Models</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Shared.Api.Google.Gmail.Models</x:String>
      <x:String>UiPath.GSuite.Activities.Gmail.Filters</x:String>
      <x:String>UiPath.GSuite.Activities.Filters</x:String>
      <x:String>UiPath.GSuite.Gmail.Enums</x:String>
      <x:String>UiPath.GSuite.Activities.Gmail.Enums</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.GSuite.Activities</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.GSuite</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.GSuite.Gmail.Models</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>System.IO</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.DocumentClassification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Classification</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.DataExtraction</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.ExtendedExtractionResultsForDocumentData.IntakesInsuranceCardV1.Bundle</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.DataValidation</x:String>
      <x:String>UiPath.IntelligentOCR.Actions.Abstractions</x:String>
      <x:String>UiPath.Platform</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.ExtendedExtractionResultsForDocumentData.IntakesInsuranceCardBackV1.Bundle</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.ExtendedExtractionResultsForDocumentData.IntakesIntakeFormV1.Bundle</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.GSuite</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.StudioWeb.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities.Design</AssemblyReference>
      <AssemblyReference>ExtendedExtractionRe.uLsAD1JhLTS1BlEEcgTk4G1</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.CodedWorkflows</AssemblyReference>
      <AssemblyReference>ExtendedExtractionRe.py4ZZ2TY3jG1uUUFC4ledqr</AssemblyReference>
      <AssemblyReference>ExtendedExtractionRe.OrYib2h3K5E1bg1ax2mGozZ4</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Gmail_GetIntakeEmails" sap:VirtualizedContainerService.HintSize="2284.2666666666664,4823.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <uga:ForEachEmailConnections ConnectionAccountName="{x:Null}" CurrentIndex="{x:Null}" FolderIdBackup="{x:Reference __ReferenceID0}" Length="{x:Null}" ManualEntryFolder="{x:Null}" AllLabels="W3siSWQiOiJDSEFUIiwiTmFtZSI6IkNIQVQiLCJUeXBlIjoic3lzdGVtIn0seyJJZCI6IlNFTlQiLCJOYW1lIjoiU0VOVCIsIlR5cGUiOiJzeXN0ZW0ifSx7IklkIjoiSU5CT1giLCJOYW1lIjoiSU5CT1giLCJUeXBlIjoic3lzdGVtIn0seyJJZCI6IklNUE9SVEFOVCIsIk5hbWUiOiJJTVBPUlRBTlQiLCJUeXBlIjoic3lzdGVtIn0seyJJZCI6IlRSQVNIIiwiTmFtZSI6IlRSQVNIIiwiVHlwZSI6InN5c3RlbSJ9LHsiSWQiOiJEUkFGVCIsIk5hbWUiOiJEUkFGVCIsIlR5cGUiOiJzeXN0ZW0ifSx7IklkIjoiU1BBTSIsIk5hbWUiOiJTUEFNIiwiVHlwZSI6InN5c3RlbSJ9LHsiSWQiOiJDQVRFR09SWV9GT1JVTVMiLCJOYW1lIjoiQ0FURUdPUllfRk9SVU1TIiwiVHlwZSI6InN5c3RlbSJ9LHsiSWQiOiJDQVRFR09SWV9VUERBVEVTIiwiTmFtZSI6IkNBVEVHT1JZX1VQREFURVMiLCJUeXBlIjoic3lzdGVtIn0seyJJZCI6IkNBVEVHT1JZX1BFUlNPTkFMIiwiTmFtZSI6IkNBVEVHT1JZX1BFUlNPTkFMIiwiVHlwZSI6InN5c3RlbSJ9LHsiSWQiOiJDQVRFR09SWV9QUk9NT1RJT05TIiwiTmFtZSI6IkNBVEVHT1JZX1BST01PVElPTlMiLCJUeXBlIjoic3lzdGVtIn0seyJJZCI6IkNBVEVHT1JZX1NPQ0lBTCIsIk5hbWUiOiJDQVRFR09SWV9TT0NJQUwiLCJUeXBlIjoic3lzdGVtIn0seyJJZCI6IlNUQVJSRUQiLCJOYW1lIjoiU1RBUlJFRCIsIlR5cGUiOiJzeXN0ZW0ifSx7IklkIjoiVU5SRUFEIiwiTmFtZSI6IlVOUkVBRCIsIlR5cGUiOiJzeXN0ZW0ifSx7IklkIjoiTGFiZWxfMTEzMTgyMDc1NjMzMTEzMzM0NSIsIk5hbWUiOiJQYXRpZW50XC9FeHBlZGl0ZSBQYXRpZW50cyIsIlR5cGUiOiJ1c2VyIn0seyJJZCI6IkxhYmVsXzEyNTY1NjI2NTI0MzUwMjUyMDkiLCJOYW1lIjoiVGVzdGluZyIsIlR5cGUiOiJ1c2VyIn0seyJJZCI6IkxhYmVsXzE1ODYxNjMwNzc5NDgwOTE1NTQiLCJOYW1lIjoiR29Gb3JteiIsIlR5cGUiOiJ1c2VyIn0seyJJZCI6IkxhYmVsXzE2MDA2MjUyMDU4Njc0ODM4MDgiLCJOYW1lIjoiT2ZmaWNlIiwiVHlwZSI6InVzZXIifSx7IklkIjoiTGFiZWxfMTY0MzY1MDQ5ODUzNjIzNzAxNiIsIk5hbWUiOiJBQkEiLCJUeXBlIjoidXNlciJ9LHsiSWQiOiJMYWJlbF8yMDA1ODk4NjY5Mzc2NTkwMTc4IiwiTmFtZSI6IkNoaWxkaG9vZCBIWCBGb3JtcyIsIlR5cGUiOiJ1c2VyIn0seyJJZCI6IkxhYmVsXzIxMDQzNDYyOTI1OTY1NjI0NjQiLCJOYW1lIjoiVGVzdGluZyBTdHVmZiIsIlR5cGUiOiJ1c2VyIn0seyJJZCI6IkxhYmVsXzIyODQ5NjYyNTIyMzM4MDk0NDEiLCJOYW1lIjoiVGhlcmFweSIsIlR5cGUiOiJ1c2VyIn0seyJJZCI6IkxhYmVsXzI0NzA3Mjc2Nzg2MjkyNTg0MTciLCJOYW1lIjoiUGF0aWVudFwvSW5zdXJhbmNlIFVwZGF0ZSBSb2xsb3ZlciIsIlR5cGUiOiJ1c2VyIn0seyJJZCI6IkxhYmVsXzI3MTc4MTMxNTM2OTc2MzI0MDciLCJOYW1lIjoiUXVlc3Rpb25zIiwiVHlwZSI6InVzZXIifSx7IklkIjoiTGFiZWxfMzUwOTgwNDIxNzIzODM5MzkyNCIsIk5hbWUiOiJPZmZpY2VcL1JlcG9ydCBXcml0aW5nIiwiVHlwZSI6InVzZXIifSx7IklkIjoiTGFiZWxfMzY1ODMzOTc3MDE4NTI4NDg0OSIsIk5hbWUiOiJSZWZlcnJhbHMiLCJUeXBlIjoidXNlciJ9LHsiSWQiOiJMYWJlbF80Mzk1NzE1Mzc4NDgyNTk3NzUxIiwiTmFtZSI6IlBhdGllbnQiLCJUeXBlIjoidXNlciJ9LHsiSWQiOiJMYWJlbF81Mzk5MTg4MjE3NjYwMTA4MTQ3IiwiTmFtZSI6Ik9mZmljZVwvQmFyaWF0cmljLU51dHJpdGlvbiBJbnF1aXJpZXMiLCJUeXBlIjoidXNlciJ9LHsiSWQiOiJMYWJlbF81NDYwMDA2MTk2MzYzMjI3NDI3IiwiTmFtZSI6Ik90aGVyXC9FbmQtb2YtRGF5IFJlcG9ydHMiLCJUeXBlIjoidXNlciJ9LHsiSWQiOiJMYWJlbF83NDg0MTQxMzQ0MzUxOTA0MjYwIiwiTmFtZSI6Ik9mZmljZVwvQmFsYW5jZSBDb2xsZWN0aXZlIiwiVHlwZSI6InVzZXIifSx7IklkIjoiTGFiZWxfNzg0Mjk3ODY2OTI4NjQ5MDg0NCIsIk5hbWUiOiJPZmZpY2VcL0dhbGxhZ2hlcidzIENsZXJneSBFdmFscyIsIlR5cGUiOiJ1c2VyIn0seyJJZCI6IkxhYmVsXzgwMTAxNDkxNjY1NjE5Mzc0MjIiLCJOYW1lIjoiSW4tT2ZmaWNlIFJlZmVycmFscyIsIlR5cGUiOiJ1c2VyIn0seyJJZCI6IkxhYmVsXzgwNDU2ODczMzI1NDQwODY2MDciLCJOYW1lIjoiT3RoZXJcL1BvbGljaWVzIiwiVHlwZSI6InVzZXIifSx7IklkIjoiTGFiZWxfODczNzU0MjMwOTI5NTcyMjA3OCIsIk5hbWUiOiJPdGhlciIsIlR5cGUiOiJ1c2VyIn0seyJJZCI6IkxhYmVsXzg4OTIyNDQ4MjA3Nzc4Njg1MDAiLCJOYW1lIjoiT3RoZXJcL0FkdmFuY2VkTUQiLCJUeXBlIjoidXNlciJ9XQ==" AuthScopesInvalid="False" BrowserFolder="Inbox" BrowserFolderLabelId="INBOX" ConnectionId="07b47295-d01d-45f7-b1b8-f42c9fa4d006" DisplayName="For Each Email" FolderInputSelectionMode="Browse" sap:VirtualizedContainerService.HintSize="590.4,4800" sap2010:WorkflowViewState.IdRef="ForEachEmailConnections_1" ImportantOnly="False" IncludeSubfolders="False" MarkAsRead="False" MaxResults="100" StarredOnly="False" UnreadOnly="False" UseConnectionService="True" WithAttachmentsOnly="False">
      <uga:ForEachEmailConnections.Body>
        <ActivityAction x:TypeArguments="ugm:GmailMessage, x:Int32">
          <ActivityAction.Argument1>
            <DelegateInArgument x:TypeArguments="ugm:GmailMessage" Name="CurrentEmail" />
          </ActivityAction.Argument1>
          <ActivityAction.Argument2>
            <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentEmailIndex" />
          </ActivityAction.Argument2>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="588.8,4564.8" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="emailId" />
              <Variable x:TypeArguments="uggm:GmailAttachmentLocalItem[]" Name="currentAttachments" />
              <Variable x:TypeArguments="x:String" Name="CurrentFile" />
              <Variable x:TypeArguments="uisad1:IDocumentData(uisaseib:IntakesInsuranceCardV1)" Name="InsDocumentData" />
              <Variable x:TypeArguments="uisad1:IDocumentData(uisaseib1:IntakesInsuranceCardBackV1)" Name="BackDocumentData" />
              <Variable x:TypeArguments="uisad1:IDocumentData(uisaseib2:IntakesIntakeFormV1)" Name="FormDocumentData" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="555.2,113.6" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">emailId</CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">CurrentEmail.MessageId</CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="555.2,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_1">
              <ui:LogMessage.Message>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">emailId</CSharpValue>
                </InArgument>
              </ui:LogMessage.Message>
            </ui:LogMessage>
            <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="555.2,112.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_1">
              <ui:CreateDirectory.Path>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">in_folderPath + emailId</CSharpValue>
                </InArgument>
              </ui:CreateDirectory.Path>
            </ui:CreateDirectory>
            <uga:DownloadAttachmentsConnections ConnectionAccountName="{x:Null}" ContinueOnError="{x:Null}" Filter="{x:Null}" FilterByFileNames="{x:Null}" Result="{x:Null}" AuthScopesInvalid="False" ConnectionId="07b47295-d01d-45f7-b1b8-f42c9fa4d006" DisplayName="Download Email Attachments" ExcludeInlineAttachments="False" sap:VirtualizedContainerService.HintSize="555.2,236.8" sap2010:WorkflowViewState.IdRef="DownloadAttachmentsConnections_1" SearchMode="UseSimple" UseConnectionService="True">
              <uga:DownloadAttachmentsConnections.Email>
                <InArgument x:TypeArguments="ugm:GmailMessage">
                  <CSharpValue x:TypeArguments="ugm:GmailMessage" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">CurrentEmail</CSharpValue>
                </InArgument>
              </uga:DownloadAttachmentsConnections.Email>
              <uga:DownloadAttachmentsConnections.NewResult>
                <OutArgument x:TypeArguments="uggm:GmailAttachmentLocalItem[]">
                  <CSharpReference x:TypeArguments="uggm:GmailAttachmentLocalItem[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">currentAttachments</CSharpReference>
                </OutArgument>
              </uga:DownloadAttachmentsConnections.NewResult>
            </uga:DownloadAttachmentsConnections>
            <ui:ForEach x:TypeArguments="uggm:GmailAttachmentLocalItem" CurrentIndex="{x:Null}" DisplayName="For Each currentGmailAttachmentLocalItem" sap:VirtualizedContainerService.HintSize="555.2,373.6" sap2010:WorkflowViewState.IdRef="ForEach`1_1">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="uggm:GmailAttachmentLocalItem">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="uggm:GmailAttachmentLocalItem" Name="currentGmailAttachmentLocalItem" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,243.2" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="382.4,183.2" sap2010:WorkflowViewState.IdRef="MoveFile_1">
                      <ui:MoveFile.Destination>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">in_folderPath + emailId</CSharpValue>
                        </InArgument>
                      </ui:MoveFile.Destination>
                      <ui:MoveFile.Path>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">currentGmailAttachmentLocalItem.LocalPath</CSharpValue>
                        </InArgument>
                      </ui:MoveFile.Path>
                    </ui:MoveFile>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <ui:ForEach.Values>
                <InArgument x:TypeArguments="sc:IEnumerable">
                  <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">currentAttachments</CSharpValue>
                </InArgument>
              </ui:ForEach.Values>
            </ui:ForEach>
            <ui:ForEachFileX DisplayName="For Each File in Folder" sap:VirtualizedContainerService.HintSize="555.2,2531.2" sap2010:WorkflowViewState.IdRef="ForEachFileX_1" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
              <ui:ForEachFileX.Body>
                <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
                  <ActivityAction.Argument1>
                    <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
                  </ActivityAction.Argument1>
                  <ActivityAction.Argument2>
                    <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                  </ActivityAction.Argument2>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="521.6,2234.4" sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="uisad:DocumentData" Name="ClassifiedData" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <p:ClassifyDocument ApiKey="{x:Null}" ClassifierResult="{x:Null}" DocumentObjectModel="{x:Null}" DocumentPath="{x:Null}" DocumentText="{x:Null}" DocumentTypes="{x:Null}" PersistenceId="{x:Null}" PredictionId="{x:Null}" Prompt="{x:Null}" ClassifierId="b42cba71-e10b-f011-90cd-6045bdf056b8" DisplayName="Classify Document" Endpoint="https://cloud.uipath.com/1f8119f7-4993-4ba4-8d5e-bc757095de38/fbe4cf4b-3c41-4d6d-aa0c-371ed57df4f8/du_/api/framework/projects/0da1be7c-810a-f011-90cd-00224830e0e8/classifiers/b42cba71-e10b-f011-90cd-6045bdf056b8/classification/start?api-version=1.0" sap:VirtualizedContainerService.HintSize="488,283.2" sap2010:WorkflowViewState.IdRef="ClassifyDocument_1" MinimumConfidence="50" ProjectId="0da1be7c-810a-f011-90cd-00224830e0e8" TimeoutInSeconds="3600">
                      <p:ClassifyDocument.ClassificationResults>
                        <OutArgument x:TypeArguments="uisad:DocumentData">
                          <CSharpReference x:TypeArguments="uisad:DocumentData" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">ClassifiedData</CSharpReference>
                        </OutArgument>
                      </p:ClassifyDocument.ClassificationResults>
                      <p:ClassifyDocument.FileInput>
                        <InArgument x:TypeArguments="upr:IResource">
                          <CSharpValue x:TypeArguments="upr:IResource" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">LocalResource.FromPath("Data\\TestForm\\Insurance Card Front.png")</CSharpValue>
                        </InArgument>
                      </p:ClassifyDocument.FileInput>
                      <p:ClassifyDocument.GptPromptWithVariables>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                      </p:ClassifyDocument.GptPromptWithVariables>
                    </p:ClassifyDocument>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="488,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_2">
                      <ui:LogMessage.Message>
                        <InArgument x:TypeArguments="x:Object">
                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">ClassifiedData.DocumentType.Id</CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Message>
                    </ui:LogMessage>
                    <If sap:VirtualizedContainerService.HintSize="488,1716.8" sap2010:WorkflowViewState.IdRef="If_1">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">ClassifiedData.DocumentType.Id == in_InsFrontId</CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <If.Then>
                        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="486.4,351.2" sap2010:WorkflowViewState.IdRef="Sequence_13">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <p:ExtractDocumentDataWithDocumentData x:TypeArguments="uisaseib:IntakesInsuranceCardV1" DocumentBounds="{x:Null}" DocumentObjectModel="{x:Null}" DocumentPath="{x:Null}" DocumentText="{x:Null}" ExtractorDocumentType="{x:Null}" ExtractorResult="{x:Null}" PersistenceId="{x:Null}" PredictionId="{x:Null}" Prompt="{x:Null}" ApplyAutoValidation="False" DisplayName="Extract Document Data" DocType="b22cba71-e10b-f011-90cd-6045bdf056b8" GenerateData="True" sap:VirtualizedContainerService.HintSize="452.8,291.2" sap2010:WorkflowViewState.IdRef="ExtractDocumentDataWithDocumentData`1_5" ProjectId="0da1be7c-810a-f011-90cd-00224830e0e8" TimeoutInSeconds="3600">
                            <p:ExtractDocumentDataWithDocumentData.AutoValidationConfidenceThreshold>
                              <InArgument x:TypeArguments="s:Nullable(x:Int32)">
                                <Literal x:TypeArguments="s:Nullable(x:Int32)" Value="0" />
                              </InArgument>
                            </p:ExtractDocumentDataWithDocumentData.AutoValidationConfidenceThreshold>
                            <p:ExtractDocumentDataWithDocumentData.ExtractionResults>
                              <OutArgument x:TypeArguments="uisad1:IDocumentData(uisaseib:IntakesInsuranceCardV1)">
                                <CSharpReference x:TypeArguments="uisad1:IDocumentData(uisaseib:IntakesInsuranceCardV1)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_9">InsDocumentData</CSharpReference>
                              </OutArgument>
                            </p:ExtractDocumentDataWithDocumentData.ExtractionResults>
                            <p:ExtractDocumentDataWithDocumentData.FileInput>
                              <InArgument x:TypeArguments="upr:IResource">
                                <CSharpValue x:TypeArguments="upr:IResource" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">ClassifiedData</CSharpValue>
                              </InArgument>
                            </p:ExtractDocumentDataWithDocumentData.FileInput>
                            <p:ExtractDocumentDataWithDocumentData.GptPromptWithVariables>
                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                            </p:ExtractDocumentDataWithDocumentData.GptPromptWithVariables>
                          </p:ExtractDocumentDataWithDocumentData>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Else" sap:VirtualizedContainerService.HintSize="486.4,1236" sap2010:WorkflowViewState.IdRef="Sequence_14">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If sap:VirtualizedContainerService.HintSize="452.8,1144.8" sap2010:WorkflowViewState.IdRef="If_2">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">ClassifiedData.DocumentType.Id == in_InsBackId</CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="451.2,335.2" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <p:ExtractDocumentDataWithDocumentData x:TypeArguments="uisaseib1:IntakesInsuranceCardBackV1" DocumentBounds="{x:Null}" DocumentObjectModel="{x:Null}" DocumentPath="{x:Null}" DocumentText="{x:Null}" ExtractorDocumentType="{x:Null}" ExtractorResult="{x:Null}" PersistenceId="{x:Null}" PredictionId="{x:Null}" Prompt="{x:Null}" ApplyAutoValidation="False" DisplayName="Extract Document Data" DocType="b32cba71-e10b-f011-90cd-6045bdf056b8" GenerateData="True" sap:VirtualizedContainerService.HintSize="417.6,275.2" sap2010:WorkflowViewState.IdRef="ExtractDocumentDataWithDocumentData`1_1" ProjectId="0da1be7c-810a-f011-90cd-00224830e0e8" TimeoutInSeconds="3600">
                                  <p:ExtractDocumentDataWithDocumentData.AutoValidationConfidenceThreshold>
                                    <InArgument x:TypeArguments="s:Nullable(x:Int32)">
                                      <Literal x:TypeArguments="s:Nullable(x:Int32)" Value="0" />
                                    </InArgument>
                                  </p:ExtractDocumentDataWithDocumentData.AutoValidationConfidenceThreshold>
                                  <p:ExtractDocumentDataWithDocumentData.ExtractionResults>
                                    <OutArgument x:TypeArguments="uisad1:IDocumentData(uisaseib1:IntakesInsuranceCardBackV1)">
                                      <CSharpReference x:TypeArguments="uisad1:IDocumentData(uisaseib1:IntakesInsuranceCardBackV1)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">BackDocumentData</CSharpReference>
                                    </OutArgument>
                                  </p:ExtractDocumentDataWithDocumentData.ExtractionResults>
                                  <p:ExtractDocumentDataWithDocumentData.FileInput>
                                    <InArgument x:TypeArguments="upr:IResource">
                                      <CSharpValue x:TypeArguments="upr:IResource" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">ClassifiedData</CSharpValue>
                                    </InArgument>
                                  </p:ExtractDocumentDataWithDocumentData.FileInput>
                                  <p:ExtractDocumentDataWithDocumentData.GptPromptWithVariables>
                                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                  </p:ExtractDocumentDataWithDocumentData.GptPromptWithVariables>
                                </p:ExtractDocumentDataWithDocumentData>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="451.2,680" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If sap:VirtualizedContainerService.HintSize="417.6,620" sap2010:WorkflowViewState.IdRef="If_3">
                                  <If.Condition>
                                    <InArgument x:TypeArguments="x:Boolean">
                                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">ClassifiedData.DocumentType.Id == in_FormId</CSharpValue>
                                    </InArgument>
                                  </If.Condition>
                                  <If.Then>
                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,399.2" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <p:ExtractDocumentDataWithDocumentData x:TypeArguments="uisaseib2:IntakesIntakeFormV1" DocumentBounds="{x:Null}" DocumentObjectModel="{x:Null}" DocumentPath="{x:Null}" DocumentText="{x:Null}" ExtractorDocumentType="{x:Null}" ExtractorResult="{x:Null}" PersistenceId="{x:Null}" PredictionId="{x:Null}" Prompt="{x:Null}" ApplyAutoValidation="False" DisplayName="Extract Document Data" DocType="b52cba71-e10b-f011-90cd-6045bdf056b8" GenerateData="True" sap:VirtualizedContainerService.HintSize="382.4,339.2" sap2010:WorkflowViewState.IdRef="ExtractDocumentDataWithDocumentData`1_6" ProjectId="0da1be7c-810a-f011-90cd-00224830e0e8" TimeoutInSeconds="3600">
                                        <p:ExtractDocumentDataWithDocumentData.AutoValidationConfidenceThreshold>
                                          <InArgument x:TypeArguments="s:Nullable(x:Int32)">
                                            <Literal x:TypeArguments="s:Nullable(x:Int32)" Value="0" />
                                          </InArgument>
                                        </p:ExtractDocumentDataWithDocumentData.AutoValidationConfidenceThreshold>
                                        <p:ExtractDocumentDataWithDocumentData.ExtractionResults>
                                          <OutArgument x:TypeArguments="uisad1:IDocumentData(uisaseib2:IntakesIntakeFormV1)">
                                            <CSharpReference x:TypeArguments="uisad1:IDocumentData(uisaseib2:IntakesIntakeFormV1)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">FormDocumentData</CSharpReference>
                                          </OutArgument>
                                        </p:ExtractDocumentDataWithDocumentData.ExtractionResults>
                                        <p:ExtractDocumentDataWithDocumentData.FileInput>
                                          <InArgument x:TypeArguments="upr:IResource">
                                            <CSharpValue x:TypeArguments="upr:IResource" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">ClassifiedData</CSharpValue>
                                          </InArgument>
                                        </p:ExtractDocumentDataWithDocumentData.FileInput>
                                        <p:ExtractDocumentDataWithDocumentData.GptPromptWithVariables>
                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                        </p:ExtractDocumentDataWithDocumentData.GptPromptWithVariables>
                                      </p:ExtractDocumentDataWithDocumentData>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,91.2" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachFileX.Body>
              <ui:ForEachFileX.Folder>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">in_folderPath + emailId</CSharpValue>
                </InArgument>
              </ui:ForEachFileX.Folder>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEachFileX>
            <Sequence DisplayName="Format intake information" sap:VirtualizedContainerService.HintSize="555.2,100.8" sap2010:WorkflowViewState.IdRef="Sequence_20">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="patientName" />
                <Variable x:TypeArguments="x:String" Name="patientDOB" />
                <Variable x:TypeArguments="x:String" Name="patientAge" />
                <Variable x:TypeArguments="x:String" Name="patientGender" />
                <Variable x:TypeArguments="x:Boolean" Name="isMinor" />
                <Variable x:TypeArguments="x:String" Name="address" />
                <Variable x:TypeArguments="x:String" Name="city" />
                <Variable x:TypeArguments="x:String" Name="state" />
                <Variable x:TypeArguments="x:String" Name="email" />
                <Variable x:TypeArguments="x:String" Name="phone" />
                <Variable x:TypeArguments="x:String" Name="guardianName" />
                <Variable x:TypeArguments="x:String" Name="relationship" />
                <Variable x:TypeArguments="x:String" Name="cardNum" />
                <Variable x:TypeArguments="x:String" Name="cvv" />
                <Variable x:TypeArguments="x:String" Name="cardExpiration" />
                <Variable x:TypeArguments="x:String" Name="zipCode" />
                <Variable x:TypeArguments="x:String" Name="guardianLName" />
                <Variable x:TypeArguments="x:String" Name="guardianFName" />
                <Variable x:TypeArguments="x:String" Name="patientLName" />
                <Variable x:TypeArguments="x:String" Name="patientFName" />
                <Variable x:TypeArguments="x:String" Name="cardYearExpiration" />
                <Variable x:TypeArguments="x:String" Name="cardType" />
                <Variable x:TypeArguments="x:String" Name="cardMonthExpiration" />
                <Variable x:TypeArguments="x:String" Name="serviceType" />
                <Variable x:TypeArguments="x:String" Name="preferredProvider" />
                <Variable x:TypeArguments="x:String" Name="visitReason" />
                <Variable x:TypeArguments="x:String" Name="custodyDecision" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="478.4,648.8" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                <ui:MultipleAssign.AssignOperations>
                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="32">
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">patientName</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24">FormDocumentData.Data.Name.Value</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">patientGender</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">FormDocumentData.Data.Gender.Value</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">patientDOB</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_26">FormDocumentData.Data.DateOfBirth.Value</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">patientAge</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">FormDocumentData.Data.Age.Value</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_15">address</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">FormDocumentData.Data.Address.Value</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">city</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">FormDocumentData.Data.City.Value</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_17">state</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_30">FormDocumentData.Data.State.Value</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_18">email</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">FormDocumentData.Data.EmailAddress.Value</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_19">phone</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">FormDocumentData.Data.CellPhone.Value</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_20">guardianName</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33">FormDocumentData.Data.ParentsName.Value</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_21">cardNum</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_34">FormDocumentData.Data.CCNumber.Value</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_22">cvv</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">FormDocumentData.Data.CCCVV.Value</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_23">cardExpiration</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">FormDocumentData.Data.CCExpirationDate.Value</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_24">serviceType</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_37">FormDocumentData.Data.ServiceType.Value</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_25">preferredProvider</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_38">FormDocumentData.Data.Provider.Value</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_26">visitReason</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39">FormDocumentData.Data.VisitReason.Value</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_27">custodyDecision</CSharpReference>
                        </OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_40">FormDocumentData.Data.CustodyDecisionMaking.Value</CSharpValue>
                        </InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                  </scg:List>
                </ui:MultipleAssign.AssignOperations>
              </ui:MultipleAssign>
              <Sequence DisplayName="Get the relationship" sap:VirtualizedContainerService.HintSize="478.4,100.8" sap2010:WorkflowViewState.IdRef="Sequence_25">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If sap:VirtualizedContainerService.HintSize="468.8,686.4" sap2010:WorkflowViewState.IdRef="If_4">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_41">int.Parse(patientAge) &lt; 18</CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <If.Then>
                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,278.4" sap2010:WorkflowViewState.IdRef="Sequence_23">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_3">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_28">relationship</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">Child</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_4">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">
                            <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_29">isMinor</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="467.2,278.4" sap2010:WorkflowViewState.IdRef="Sequence_24">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_5">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_30">relationship</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">Self</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_6">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">
                            <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_31">isMinor</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
              <Sequence DisplayName="Split the name into first and last" sap:VirtualizedContainerService.HintSize="478.4,100.8" sap2010:WorkflowViewState.IdRef="Sequence_21">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_2">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_32">patientFName</CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_42">System.Text.RegularExpressions.Regex.Match(patientName, @"^(?&lt;firstName&gt;\S+)").Groups["firstName"].Value;</CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_7">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_33">patientLName</CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_43">System.Text.RegularExpressions.Regex.Match(patientName, @"(?&lt;lastName&gt;\S+)$").Groups["lastName"].Value;</CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_8">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_34">guardianFName</CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_44">System.Text.RegularExpressions.Regex.Match(guardianName, @"^(?&lt;firstName&gt;\S+)").Groups["firstName"].Value;</CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_9">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_35">guardianLName</CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45">System.Text.RegularExpressions.Regex.Match(guardianName, @"(?&lt;lastName&gt;\S+)$").Groups["lastName"].Value;</CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
              <Assign sap:VirtualizedContainerService.HintSize="478.4,113.6" sap2010:WorkflowViewState.IdRef="Assign_10">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">
                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_36">patientGender</CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">patientGender.Substring(0,1).ToUpper() == "M" ? "Male" : patientGender.Substring(0,1).ToUpper() == "F" ? "Female" : "Unknown";</CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
              <Sequence DisplayName="Card expiration Formatting" sap:VirtualizedContainerService.HintSize="478.4,100.8" sap2010:WorkflowViewState.IdRef="Sequence_22">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_11">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_37">cardMonthExpiration</CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_47">System.Text.RegularExpressions.Regex.Match(cardExpiration, @"^(?&lt;month&gt;\d{2})").Groups["month"].Value;</CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_12">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_38">cardYearExpiration</CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_48">"20" + System.Text.RegularExpressions.Regex.Match(cardExpiration, @"(?&lt;year&gt;\d{2})$").Groups["year"].Value;</CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_13">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_39">cardType</CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_49">cardNum.StartsWith("3") ? "AMEX" : cardNum.StartsWith("4") ? "VISA" : cardNum.StartsWith("5") ? "MASTERCARD" : cardNum.StartsWith("6") ? "DISCOVER" : "UNKNOWN"</CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="478.4,165.6" sap2010:WorkflowViewState.IdRef="LogMessage_3">
                <ui:LogMessage.Message>
                  <InArgument x:TypeArguments="x:Object">
                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_50">"Test"</CSharpValue>
                  </InArgument>
                </ui:LogMessage.Message>
              </ui:LogMessage>
            </Sequence>
            <Sequence DisplayName="Check the Service Requested" sap:VirtualizedContainerService.HintSize="555.2,329.6" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="If ABA send email dont process advanced md" sap:VirtualizedContainerService.HintSize="449.6,123.2" sap2010:WorkflowViewState.IdRef="Sequence_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
              <Sequence DisplayName="If doesnt match the bottom reason put in manual" sap:VirtualizedContainerService.HintSize="449.6,114.4" sap2010:WorkflowViewState.IdRef="Sequence_12">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </Sequence>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="AMD_Login - Invoke Workflow File (AdvancedMD\\AMD_Login.xaml)" sap:VirtualizedContainerService.HintSize="555.2,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="AdvancedMD\\AMD_Login.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_AssetFolderName" />
                <InArgument x:TypeArguments="x:String" x:Key="in_Asset_OfficeKey" />
                <InArgument x:TypeArguments="x:String" x:Key="in_Asset_Credetials" />
                <InArgument x:TypeArguments="x:String" x:Key="in_AMD_LoginURL" />
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="AMD_AddNewPatient - Invoke Workflow File (AdvancedMD\\AMD_AddNewPatient.xaml)" sap:VirtualizedContainerService.HintSize="555.2,249.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="AdvancedMD\\AMD_AddNewPatient.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <scg:Dictionary x:TypeArguments="x:String, Argument" />
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <Sequence DisplayName="If custody agreement needed send email" sap:VirtualizedContainerService.HintSize="555.2,106.4" sap2010:WorkflowViewState.IdRef="Sequence_9">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </uga:ForEachEmailConnections.Body>
      <uga:ForEachEmailConnections.Filter>
        <ugagf:MailFilterCollection LogicalOperator="And">
          <ugagf:MailFilterCollection.Filters>
            <ugagf:MailFilterElement DateEqualsFilter="{x:Null}" Values="{x:Null}" CollectionFilterOperator="In" Criteria="Subject" DateOperator="NewerThan" StringOperator="Contains" Value="NPP" />
          </ugagf:MailFilterCollection.Filters>
        </ugagf:MailFilterCollection>
      </uga:ForEachEmailConnections.Filter>
      <uga:ForEachEmailConnections.Folder>
        <ugagm:FolderArgument ConnectionDescriptor="{x:Null}" ManualEntryFolderName="{x:Null}" BrowserFolderId="INBOX" BrowserFolderName="Inbox" ConnectionKey="07b47295-d01d-45f7-b1b8-f42c9fa4d006" InputMode="Browse">
          <ugagm:FolderArgument.Backup>
            <usau:BackupSlot x:TypeArguments="ugage:FolderInputMode" x:Name="__ReferenceID0" StoredValue="Browse">
              <usau:BackupSlot.BackupValues>
                <scg:Dictionary x:TypeArguments="ugage:FolderInputMode, scg:List(x:Object)" />
              </usau:BackupSlot.BackupValues>
            </usau:BackupSlot>
          </ugagm:FolderArgument.Backup>
        </ugagm:FolderArgument>
      </uga:ForEachEmailConnections.Folder>
    </uga:ForEachEmailConnections>
  </Sequence>
</Activity>