<Activity mc:Ignorable="sap sap2010" x:Class="FG_GetIntakeInfo" this:FG_GetIntakeInfo.downlaodUrl="https://fastgem-base.s3.amazonaws.com/" this:FG_GetIntakeInfo.in_FormId="bd530ee5-1a0b-f011-90cd-002248237549" this:FG_GetIntakeInfo.in_InsFrontId="8ee698e1-810a-f011-90cd-002248237549" this:FG_GetIntakeInfo.in_InsBackId="b3ebdb94-8f0a-f011-90cd-002248237549" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:p="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=System.Private.CoreLib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:uasf="clr-namespace:UiPath.Activities.System.FileOperations;assembly=UiPath.System.Activities" xmlns:uga="clr-namespace:UiPath.GSuite.Activities;assembly=UiPath.GSuite.Activities" xmlns:ugage="clr-namespace:UiPath.GSuite.Activities.Gmail.Enums;assembly=UiPath.GSuite.Activities" xmlns:ugagm="clr-namespace:UiPath.GSuite.Activities.Gmail.Models;assembly=UiPath.GSuite.Activities" xmlns:ugm="clr-namespace:UiPath.GSuite.Models;assembly=UiPath.GSuite" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uisad="clr-namespace:UiPath.IntelligentOCR.StudioWeb.Activities.DocumentClassification;assembly=UiPath.IntelligentOCR.StudioWeb.Activities" xmlns:uisad1="clr-namespace:UiPath.IntelligentOCR.StudioWeb.Activities.DataExtraction;assembly=UiPath.IntelligentOCR.StudioWeb.Activities" xmlns:uisaseib="clr-namespace:UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.ExtendedExtractionResultsForDocumentData.IntakesInsuranceCardV1.Bundle;assembly=ExtendedExtractionRe.uLsAD1JhLTS1BlEEcgTk4G1" xmlns:uisaseib1="clr-namespace:UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.ExtendedExtractionResultsForDocumentData.IntakesInsuranceCardBackV1.Bundle;assembly=ExtendedExtractionRe.py4ZZ2TY3jG1uUUFC4ledqr" xmlns:uisaseib2="clr-namespace:UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.ExtendedExtractionResultsForDocumentData.IntakesIntakeFormV1.Bundle;assembly=ExtendedExtractionRe.OrYib2h3K5E1bg1ax2mGozZ4" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:upr="clr-namespace:UiPath.Platform.ResourceHandling;assembly=UiPath.Platform" xmlns:usau="clr-namespace:UiPath.Shared.Activities.Utils;assembly=UiPath.GSuite.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="downlaodUrl" Type="InArgument(x:String)" />
    <x:Property Name="in_FormId" Type="InArgument(x:String)" />
    <x:Property Name="in_InsFrontId" Type="InArgument(x:String)" />
    <x:Property Name="in_InsBackId" Type="InArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Models</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Platform.SyncObjects</x:String>
      <x:String>UiPath.UIAutomationNext.Activities.Models</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.Activities.System.FileOperations</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.DocumentClassification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Classification</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.DataExtraction</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.ExtendedExtractionResultsForDocumentData.IntakesInsuranceCardV1.Bundle</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.ExtendedExtractionResultsForDocumentData.IntakesInsuranceCardBackV1.Bundle</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.SWEntities.ExtendedExtractionResultsForDocumentData.IntakesIntakeFormV1.Bundle</x:String>
      <x:String>UiPath.GSuite.Activities.Gmail.Enums</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.GSuite.Activities</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.Platform</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPath.GSuite.Activities.Gmail.Models</x:String>
      <x:String>UiPath.GSuite.Models</x:String>
      <x:String>UiPath.Shared.Api.Google.Gmail.Models</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Models.CV</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.StudioWeb.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>ExtendedExtractionRe.uLsAD1JhLTS1BlEEcgTk4G1</AssemblyReference>
      <AssemblyReference>ExtendedExtractionRe.py4ZZ2TY3jG1uUUFC4ledqr</AssemblyReference>
      <AssemblyReference>ExtendedExtractionRe.OrYib2h3K5E1bg1ax2mGozZ4</AssemblyReference>
      <AssemblyReference>UiPath.CodedWorkflows</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.GSuite</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="FG_GetIntakeInfo" sap:VirtualizedContainerService.HintSize="2447.4666666666667,7324" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="692.8,7300.8" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="657.6,7199.2" sap2010:WorkflowViewState.IdRef="Sequence_72">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <uix:NApplicationCard AttachMode="ByInstance" DisplayName="Chrome Client Details" HealingAgentBehavior="Job" sap:VirtualizedContainerService.HintSize="624,7139.2" sap2010:WorkflowViewState.IdRef="NApplicationCard_1" InteractionMode="DebuggerApi" ScopeGuid="c29b4aa2-9547-478c-aa3f-89556c510e4e" Version="V2">
            <uix:NApplicationCard.Body>
              <ActivityAction x:TypeArguments="x:Object">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="590.4,6859.2" sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="rawData" />
                    <Variable x:TypeArguments="njl:JObject" Name="jData" />
                    <Variable x:TypeArguments="x:String" Name="patientFName" />
                    <Variable x:TypeArguments="x:String" Name="patientLName" />
                    <Variable x:TypeArguments="x:String" Name="patientDOB" />
                    <Variable x:TypeArguments="x:String" Name="patientAge" />
                    <Variable x:TypeArguments="x:String" Name="address" />
                    <Variable x:TypeArguments="x:String" Name="city" />
                    <Variable x:TypeArguments="x:String" Name="state" />
                    <Variable x:TypeArguments="x:String" Name="zipCode" />
                    <Variable x:TypeArguments="x:String" Name="email" />
                    <Variable x:TypeArguments="x:String" Name="guardianLName" />
                    <Variable x:TypeArguments="x:String" Name="guardianFName" />
                    <Variable x:TypeArguments="x:String" Name="serviceType" />
                    <Variable x:TypeArguments="x:String" Name="preferredProvider" />
                    <Variable x:TypeArguments="x:String" Name="visitReason" />
                    <Variable x:TypeArguments="x:String" Name="custodyDecision" />
                    <Variable x:TypeArguments="x:String" Name="phone" />
                    <Variable x:TypeArguments="x:String" Name="CCName" />
                    <Variable x:TypeArguments="x:String" Name="CCExpiration" />
                    <Variable x:TypeArguments="x:String" Name="CCNumber" />
                    <Variable x:TypeArguments="x:String" Name="CCType" />
                    <Variable x:TypeArguments="x:String" Name="CVC" />
                    <Variable x:TypeArguments="x:String" Name="files" />
                    <Variable x:TypeArguments="s:String[]" Name="fileArray" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Click 'Raw Data'" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="556.8,225.6" sap2010:WorkflowViewState.IdRef="NClick_1" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="c29b4aa2-9547-478c-aa3f-89556c510e4e" Version="V4">
                    <uix:NClick.Target>
                      <uix:TargetAnchorable BrowserURL="bb.fastgem.net/orders-2/submissions/submissionform/5" ContentHash="RCAgfwaJSEuPhLolnlQkJg" DesignTimeRectangle="859, 857, 1609, 50" DesignTimeScaleFactor="1.5" ElementType="Text" FuzzySelectorArgument="&lt;webctrl aaname='Raw Data' parentid='myAccordian' tag='A' type='' class='accordion-toggle collapsed' check:innerText='Raw Data' /&gt;" Guid="06af4de7-71e6-4f8e-97e6-d99ca52ab91f" InformativeScreenshot="7d3a8a01ff54250bbb98cc5c45a977af.png" Reference="8RhyklEjiEifip1A7a44sA/MBSalJuYl02BOJ7loCADAg" ScopeSelectorArgument="&lt;html app='chrome.exe' title='Client Details' /&gt;" SearchSteps="FuzzySelector" Version="V5" Visibility="Interactive">
                        <uix:TargetAnchorable.Anchors>
                          <scg:List x:TypeArguments="uix:ITarget" Capacity="1">
                            <uix:Target DesignTimeRectangle="859, 802, 1609, 50" ElementType="Text" FuzzySelectorArgument="&lt;webctrl aaname='Contact Roles' parentid='myAccordian' tag='A' type='' class='accordion-toggle collapsed' check:innerText='Contact Roles' /&gt;" Guid="6be3079a-a9ef-44a6-a630-b245492cd738" SearchSteps="FuzzySelector" />
                          </scg:List>
                        </uix:TargetAnchorable.Anchors>
                      </uix:TargetAnchorable>
                    </uix:NClick.Target>
                    <uix:NClick.VerifyOptions>
                      <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                        <uix:VerifyExecutionOptions.Retry>
                          <InArgument x:TypeArguments="x:Boolean" />
                        </uix:VerifyExecutionOptions.Retry>
                        <uix:VerifyExecutionOptions.Timeout>
                          <InArgument x:TypeArguments="x:Double" />
                        </uix:VerifyExecutionOptions.Timeout>
                      </uix:VerifyExecutionOptions>
                    </uix:NClick.VerifyOptions>
                  </uix:NClick>
                  <uix:NGetText DisplayName="Get Text 'Raw Data'" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="556.8,189.6" sap2010:WorkflowViewState.IdRef="NGetText_1" ScopeIdentifier="c29b4aa2-9547-478c-aa3f-89556c510e4e" Version="V4">
                    <uix:NGetText.Target>
                      <uix:TargetAnchorable BrowserURL="bb.fastgem.net/orders-2/submissions/submissionform/5" ContentHash="dAMBpk0w_062Btm7Oj24NA" DesignTimeRectangle="881, 922, 1564, 2012" DesignTimeScaleFactor="1.5" FuzzySelectorArgument="&lt;webctrl tag='PRE' type='' class='' /&gt;" Guid="6b0ea87a-75b3-42b2-9d15-f13fa09df605" InformativeScreenshot="641aeae2485bdfa27155bafefc7a831f.png" Reference="8RhyklEjiEifip1A7a44sA/Ve2aE6BGd0e5woWqdn1TmA" ScopeSelectorArgument="&lt;html app='chrome.exe' title='Client Details' /&gt;" SearchSteps="FuzzySelector" Version="V5" Visibility="Interactive">
                        <uix:TargetAnchorable.Anchors>
                          <scg:List x:TypeArguments="uix:ITarget" Capacity="1">
                            <uix:Target DesignTimeRectangle="859, 857, 1609, 50" ElementType="Text" FuzzySelectorArgument="&lt;webctrl class='accordion-toggle' parentid='myAccordian' tag='A' type='' aaname='Raw Data' check:innerText='Raw Data' /&gt;" Guid="2bd27e4f-930b-4b3c-b928-120678781bf7" SearchSteps="FuzzySelector" />
                          </scg:List>
                        </uix:TargetAnchorable.Anchors>
                      </uix:TargetAnchorable>
                    </uix:NGetText.Target>
                    <uix:NGetText.TextString>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">rawData</CSharpReference>
                      </OutArgument>
                    </uix:NGetText.TextString>
                  </uix:NGetText>
                  <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Click 'DOB'" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="556.8,225.6" sap2010:WorkflowViewState.IdRef="NClick_2" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="c29b4aa2-9547-478c-aa3f-89556c510e4e" Version="V4">
                    <uix:NClick.Target>
                      <uix:TargetAnchorable BrowserURL="bb.fastgem.net/orders-2/submissions/submission/5" ContentHash="xpXXmJ1g8EagXIslfY1scw" DesignTimeRectangle="300, 1378, 21, 21" DesignTimeScaleFactor="1.5" FuzzySelectorArgument="&lt;webctrl tag='TABLE' /&gt;&lt;webctrl type='' tag='I' class='icon-eye' aaname='' /&gt;" Guid="b4a99dc1-4435-435c-98ad-254b2321f7fd" InformativeScreenshot="58137f32eb8654e1e884869f1766cdbe.png" Reference="8RhyklEjiEifip1A7a44sA/fgVhz4yaI0WU-FhGxFfFTQ" ScopeSelectorArgument="&lt;html app='chrome.exe' title='Client Details' /&gt;" SearchSteps="FuzzySelector" Version="V5" Visibility="Interactive">
                        <uix:TargetAnchorable.Anchors>
                          <scg:List x:TypeArguments="uix:ITarget" Capacity="1">
                            <uix:Target DesignTimeRectangle="38, 1341, 340, 30" ElementType="Text" FuzzySelectorArgument="&lt;webctrl tag='TABLE' /&gt;&lt;webctrl id='jform_dob-lbl' type='' tag='LABEL' class='' aaname=' &amp;#x9;DOB' check:innerText='DOB' /&gt;" Guid="074013d9-7cf0-4b50-9ce5-08046f668d43" SearchSteps="FuzzySelector" />
                          </scg:List>
                        </uix:TargetAnchorable.Anchors>
                      </uix:TargetAnchorable>
                    </uix:NClick.Target>
                    <uix:NClick.VerifyOptions>
                      <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                        <uix:VerifyExecutionOptions.Retry>
                          <InArgument x:TypeArguments="x:Boolean" />
                        </uix:VerifyExecutionOptions.Retry>
                        <uix:VerifyExecutionOptions.Timeout>
                          <InArgument x:TypeArguments="x:Double" />
                        </uix:VerifyExecutionOptions.Timeout>
                      </uix:VerifyExecutionOptions>
                    </uix:NClick.VerifyOptions>
                  </uix:NClick>
                  <uix:NGetText DisplayName="Get Text 'DOB'" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="556.8,189.6" sap2010:WorkflowViewState.IdRef="NGetText_2" ScopeIdentifier="c29b4aa2-9547-478c-aa3f-89556c510e4e" Version="V4">
                    <uix:NGetText.Target>
                      <uix:TargetAnchorable BrowserURL="bb.fastgem.net/orders-2/submissions/submission/5" ContentHash="NJIa9XUIAU6Yy-h6e9LqNA" DesignTimeRectangle="38, 1371, 306, 41" DesignTimeScaleFactor="1.5" ElementType="InputBox" FuzzySelectorArgument="&lt;webctrl tag='TABLE' /&gt;&lt;webctrl id='jform_dob' type='text' tag='INPUT' class='input-append ' aaname=' &amp;#x9;DOB' /&gt;" Guid="3c3f7151-9922-44b0-9c97-c3223b92b488" InformativeScreenshot="2b25788294b627f8a2450c82d9002902.png" IsResponsive="True" Reference="8RhyklEjiEifip1A7a44sA/HmxU2wggaUiLYBDYvltm_w" ScopeSelectorArgument="&lt;html app='chrome.exe' title='Client Details' /&gt;" SearchSteps="FuzzySelector" Version="V5" Visibility="Interactive">
                        <uix:TargetAnchorable.Anchors>
                          <scg:List x:TypeArguments="uix:ITarget" Capacity="1">
                            <uix:Target DesignTimeRectangle="38, 1341, 340, 30" ElementType="Text" FuzzySelectorArgument="&lt;webctrl tag='TABLE' /&gt;&lt;webctrl id='jform_dob-lbl' type='' tag='LABEL' class='' aaname=' &amp;#x9;DOB' check:innerText='DOB' /&gt;" Guid="09803c46-7d89-4cb2-b25e-efefe7a42e3a" SearchSteps="FuzzySelector" />
                          </scg:List>
                        </uix:TargetAnchorable.Anchors>
                      </uix:TargetAnchorable>
                    </uix:NGetText.Target>
                    <uix:NGetText.TextString>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_19">patientDOB</CSharpReference>
                      </OutArgument>
                    </uix:NGetText.TextString>
                  </uix:NGetText>
                  <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Click 'Billing'" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="556.8,225.6" sap2010:WorkflowViewState.IdRef="NClick_3" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="c29b4aa2-9547-478c-aa3f-89556c510e4e" Version="V4">
                    <uix:NClick.Target>
                      <uix:TargetAnchorable BrowserURL="bb.fastgem.net/orders-2/submissions/submission/5" ContentHash="m7LcPG4MIUaYMBORuYBWhw" DesignTimeRectangle="194, 395, 84, 56" DesignTimeScaleFactor="1.5" ElementType="Text" FuzzySelectorArgument="&lt;webctrl aaname='Billing' parentid='myTabTabs' tag='A' type='' class='' check:innerText='Billing' /&gt;" Guid="beea3430-c7ce-4e1e-a4bb-69a993fb8cd5" InformativeScreenshot="2cbb6d75626ed3a11ab9d81b6b2a11bd.png" Reference="8RhyklEjiEifip1A7a44sA/sCtcVF8z90WbdmSWJtRdDQ" ScopeSelectorArgument="&lt;html app='chrome.exe' title='Client Details' /&gt;" SearchSteps="FuzzySelector" Version="V5" Visibility="Interactive">
                        <uix:TargetAnchorable.Anchors>
                          <scg:List x:TypeArguments="uix:ITarget" Capacity="1">
                            <uix:Target DesignTimeRectangle="281, 395, 74, 56" ElementType="Text" FuzzySelectorArgument="&lt;webctrl aaname='Misc' parentid='myTabTabs' tag='A' type='' class='' check:innerText='Misc' /&gt;" Guid="955599c6-786f-4efa-98f3-a051a53359d6" SearchSteps="FuzzySelector" />
                          </scg:List>
                        </uix:TargetAnchorable.Anchors>
                      </uix:TargetAnchorable>
                    </uix:NClick.Target>
                    <uix:NClick.VerifyOptions>
                      <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                        <uix:VerifyExecutionOptions.Retry>
                          <InArgument x:TypeArguments="x:Boolean" />
                        </uix:VerifyExecutionOptions.Retry>
                        <uix:VerifyExecutionOptions.Timeout>
                          <InArgument x:TypeArguments="x:Double" />
                        </uix:VerifyExecutionOptions.Timeout>
                      </uix:VerifyExecutionOptions>
                    </uix:NClick.VerifyOptions>
                  </uix:NClick>
                  <uix:NGetText DisplayName="Get Text 'Name on Credit Card/Che…'" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="556.8,189.6" sap2010:WorkflowViewState.IdRef="NGetText_3" ScopeIdentifier="c29b4aa2-9547-478c-aa3f-89556c510e4e" Version="V4">
                    <uix:NGetText.Target>
                      <uix:TargetAnchorable BrowserURL="bb.fastgem.net/orders-2/submissions/submission/5" ContentHash="yT9dNoGyv0yScuL1eDdeiw" DesignTimeRectangle="688, 833, 414, 41" DesignTimeScaleFactor="1.5" ElementType="InputBox" FuzzySelectorArgument="&lt;webctrl name='jform[credit_card_data][credit_card_data0][credit_card_name]' tag='INPUT' type='text' class='' aaname=' &amp;#x9;Name on Credit Card/Checking Account' /&gt;" Guid="ba53ae8c-1bec-4247-9d9f-ee3b99203fe1" InformativeScreenshot="85d189c11887f58206b93b8244899afb.png" IsResponsive="True" Reference="8RhyklEjiEifip1A7a44sA/41CK4Ij0G0K4MBBewU8Fdg" ScopeSelectorArgument="&lt;html app='chrome.exe' title='Client Details' /&gt;" SearchSteps="FuzzySelector" Version="V5" Visibility="Interactive">
                        <uix:TargetAnchorable.Anchors>
                          <scg:List x:TypeArguments="uix:ITarget" Capacity="1">
                            <uix:Target DesignTimeRectangle="688, 807, 306, 26" ElementType="Text" FuzzySelectorArgument="&lt;webctrl parentid='fast-subform-inner-credit_card_data' tag='LABEL' type='' class='hasPopover' aaname=' &amp;#x9;Name on Credit Card/Checking Account' check:innerText='Name on Credit Card/Checking Account' /&gt;" Guid="bb4f64e2-9e4a-4a4f-acd5-c7be4f011702" SearchSteps="FuzzySelector" />
                          </scg:List>
                        </uix:TargetAnchorable.Anchors>
                      </uix:TargetAnchorable>
                    </uix:NGetText.Target>
                    <uix:NGetText.TextString>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_33">CCName</CSharpReference>
                      </OutArgument>
                    </uix:NGetText.TextString>
                  </uix:NGetText>
                  <uix:NGetText DisplayName="Get Text 'Credit Card Expiration'" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="556.8,189.6" sap2010:WorkflowViewState.IdRef="NGetText_4" ScopeIdentifier="c29b4aa2-9547-478c-aa3f-89556c510e4e" Version="V4">
                    <uix:NGetText.Target>
                      <uix:TargetAnchorable BrowserURL="bb.fastgem.net/orders-2/submissions/submission/5" ContentHash="4KTsgJdcoE6ZN-Ehwmpl5g" DesignTimeRectangle="1864, 833, 414, 41" DesignTimeScaleFactor="1.5" ElementType="InputBox" FuzzySelectorArgument="&lt;webctrl name='jform[credit_card_data][credit_card_data0][credit_card_exp]' tag='INPUT' type='text' class='' aaname=' &amp;#x9;Credit Card Expiration' /&gt;" Guid="bced26a6-740a-4755-84a7-11dfe0090cfb" InformativeScreenshot="65c9de9ba450d8adfe184ba6f9fef40f.png" IsResponsive="True" Reference="8RhyklEjiEifip1A7a44sA/HF_34f8GgUiaAi6nSrJ51Q" ScopeSelectorArgument="&lt;html app='chrome.exe' title='Client Details' /&gt;" SearchSteps="FuzzySelector" Version="V5" Visibility="Interactive">
                        <uix:TargetAnchorable.Anchors>
                          <scg:List x:TypeArguments="uix:ITarget" Capacity="1">
                            <uix:Target DesignTimeRectangle="1864, 807, 551, 26" ElementType="Text" FuzzySelectorArgument="&lt;webctrl aaname=' &amp;#x9;Credit Card Expiration' parentid='fast-subform-inner-credit_card_data' tag='LABEL' type='' class='' check:innerText='Credit Card Expiration' /&gt;" Guid="b872edd4-abc5-4da5-9f3b-493d57b51b41" SearchSteps="FuzzySelector" />
                          </scg:List>
                        </uix:TargetAnchorable.Anchors>
                      </uix:TargetAnchorable>
                    </uix:NGetText.Target>
                    <uix:NGetText.TextString>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_34">CCExpiration</CSharpReference>
                      </OutArgument>
                    </uix:NGetText.TextString>
                  </uix:NGetText>
                  <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Click 'Credit Card Number'" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="556.8,225.6" sap2010:WorkflowViewState.IdRef="NClick_4" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="c29b4aa2-9547-478c-aa3f-89556c510e4e" Version="V4">
                    <uix:NClick.Target>
                      <uix:TargetAnchorable BrowserURL="bb.fastgem.net/orders-2/submissions/submission/5" ContentHash="1-8NPiAjlkScerxhfIkJfw" DesignTimeRectangle="1697, 840, 21, 21" DesignTimeScaleFactor="1.5" FuzzySelectorArgument="&lt;webctrl class='icon-eye' parentid='fast-subform-inner-credit_card_data' tag='I' type='' aaname='' /&gt;" Guid="588a0436-84ca-4090-819d-ef65fef58e41" InformativeScreenshot="f1000f253282c72cdc6be217c0559154.png" Reference="8RhyklEjiEifip1A7a44sA/x9gl5aFSvUqaDGdXqeCqvg" ScopeSelectorArgument="&lt;html app='chrome.exe' title='Client Details' /&gt;" SearchSteps="FuzzySelector" Version="V5" Visibility="Interactive">
                        <uix:TargetAnchorable.Anchors>
                          <scg:List x:TypeArguments="uix:ITarget" Capacity="1">
                            <uix:Target DesignTimeRectangle="1276, 807, 551, 26" FuzzySelectorArgument="&lt;webctrl class='control-label' type='' parentid='fast-subform-inner-credit_card_data' tag='DIV' aaname=' ' check:innerText='Credit Card Number' /&gt;" Guid="96ae565a-51ac-44d8-bd88-1f9d356d8111" SearchSteps="FuzzySelector" />
                          </scg:List>
                        </uix:TargetAnchorable.Anchors>
                      </uix:TargetAnchorable>
                    </uix:NClick.Target>
                    <uix:NClick.VerifyOptions>
                      <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                        <uix:VerifyExecutionOptions.Retry>
                          <InArgument x:TypeArguments="x:Boolean" />
                        </uix:VerifyExecutionOptions.Retry>
                        <uix:VerifyExecutionOptions.Timeout>
                          <InArgument x:TypeArguments="x:Double" />
                        </uix:VerifyExecutionOptions.Timeout>
                      </uix:VerifyExecutionOptions>
                    </uix:NClick.VerifyOptions>
                  </uix:NClick>
                  <uix:NGetText DisplayName="Get Text 'Credit Card Number'" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="556.8,189.6" sap2010:WorkflowViewState.IdRef="NGetText_5" ScopeIdentifier="c29b4aa2-9547-478c-aa3f-89556c510e4e" Version="V4">
                    <uix:NGetText.Target>
                      <uix:TargetAnchorable BrowserURL="bb.fastgem.net/orders-2/submissions/submission/5" ContentHash="8PoQGeQO0E6GFhgKAtZUew" DesignTimeRectangle="1276, 833, 496, 41" DesignTimeScaleFactor="1.5" ElementType="InputBox" FuzzySelectorArgument="&lt;webctrl name='jform[credit_card_data][credit_card_data0][credit_card_num]' tag='INPUT' type='text' class='input-append ' aaname=' &amp;#x9;Credit Card Number' /&gt;" Guid="9e3b8619-3329-4857-b863-391acad06a39" InformativeScreenshot="354629df7c702bd0da48b4a1150d3ecd.png" IsResponsive="True" Reference="8RhyklEjiEifip1A7a44sA/XP8_PuuvF0iRfOSbvwBjzQ" ScopeSelectorArgument="&lt;html app='chrome.exe' title='Client Details' /&gt;" SearchSteps="FuzzySelector" Version="V5" Visibility="Interactive">
                        <uix:TargetAnchorable.Anchors>
                          <scg:List x:TypeArguments="uix:ITarget" Capacity="1">
                            <uix:Target DesignTimeRectangle="1276, 807, 155, 26" ElementType="Text" FuzzySelectorArgument="&lt;webctrl aaname=' &amp;#x9;Credit Card Number' parentid='fast-subform-inner-credit_card_data' tag='LABEL' type='' class='hasPopover' check:innerText='Credit Card Number' /&gt;" Guid="1f95fd81-b063-40d0-a4e9-f18a39b68cad" SearchSteps="FuzzySelector" />
                          </scg:List>
                        </uix:TargetAnchorable.Anchors>
                      </uix:TargetAnchorable>
                    </uix:NGetText.Target>
                    <uix:NGetText.TextString>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_35">CCNumber</CSharpReference>
                      </OutArgument>
                    </uix:NGetText.TextString>
                  </uix:NGetText>
                  <uix:NGetText DisplayName="Get Text 'Credit Card Type'" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="556.8,189.6" sap2010:WorkflowViewState.IdRef="NGetText_6" ScopeIdentifier="c29b4aa2-9547-478c-aa3f-89556c510e4e" Version="V4">
                    <uix:NGetText.Target>
                      <uix:TargetAnchorable BrowserURL="bb.fastgem.net/orders-2/submissions/submission/5" ContentHash="VwsyeUihtUy__N1ajeuSgw" DesignTimeRectangle="1289, 938, 195, 36" DesignTimeScaleFactor="1.5" ElementType="Text" FuzzySelectorArgument="&lt;webctrl tag='SPAN' type='' class='' /&gt;" Guid="2471eae8-9575-4535-b0bb-f1b2279cd907" InformativeScreenshot="a145086242330ce5937016848706681b.png" Reference="8RhyklEjiEifip1A7a44sA/6k1rpCpVs06C6IH4mbVoDA" ScopeSelectorArgument="&lt;html app='chrome.exe' title='Client Details' /&gt;" SearchSteps="FuzzySelector" Version="V5" Visibility="Interactive">
                        <uix:TargetAnchorable.Anchors>
                          <scg:List x:TypeArguments="uix:ITarget" Capacity="1">
                            <uix:Target DesignTimeRectangle="1276, 911, 551, 26" ElementType="Text" FuzzySelectorArgument="&lt;webctrl aaname=' &amp;#x9;Credit Card Type' parentid='fast-subform-inner-credit_card_data' tag='LABEL' type='' class='' check:innerText='Credit Card Type' /&gt;" Guid="a50386e4-3349-4b14-99ee-a2e5fc8ed2d9" SearchSteps="FuzzySelector" />
                          </scg:List>
                        </uix:TargetAnchorable.Anchors>
                      </uix:TargetAnchorable>
                    </uix:NGetText.Target>
                    <uix:NGetText.TextString>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_36">CCType</CSharpReference>
                      </OutArgument>
                    </uix:NGetText.TextString>
                  </uix:NGetText>
                  <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Click 'Credit Card CVC'" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="556.8,225.6" sap2010:WorkflowViewState.IdRef="NClick_5" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="c29b4aa2-9547-478c-aa3f-89556c510e4e" Version="V4">
                    <uix:NClick.Target>
                      <uix:TargetAnchorable BrowserURL="bb.fastgem.net/orders-2/submissions/submission/7" ContentHash="5U_GJrrVBUSDAqgkoJpXGw" DesignTimeRectangle="2285, 944, 21, 21" DesignTimeScaleFactor="1.5" FuzzySelectorArgument="&lt;webctrl class='icon-eye' type='' parentid='fast-subform-inner-credit_card_data' tag='I' aaname='' /&gt;" Guid="5d841410-5875-4dd8-b5ff-6e5ba48cd4e5" InformativeScreenshot="597e9f0f9c25886f52de76f7905e52c5.png" Reference="8RhyklEjiEifip1A7a44sA/xHGCbZ5-mkmi7e0mrm1L7w" ScopeSelectorArgument="&lt;html app='chrome.exe' title='Client Details' /&gt;" SearchSteps="FuzzySelector" Version="V5" Visibility="Interactive">
                        <uix:TargetAnchorable.Anchors>
                          <scg:List x:TypeArguments="uix:ITarget" Capacity="1">
                            <uix:Target DesignTimeRectangle="1864, 911, 551, 26" ElementType="Text" FuzzySelectorArgument="&lt;webctrl aaname=' &amp;#x9;Credit Card CVC' parentid='fast-subform-inner-credit_card_data' tag='LABEL' type='' class='' check:innerText='Credit Card CVC' /&gt;" Guid="d77008d6-81b7-4c28-a71d-664230c78eb0" SearchSteps="FuzzySelector" />
                          </scg:List>
                        </uix:TargetAnchorable.Anchors>
                      </uix:TargetAnchorable>
                    </uix:NClick.Target>
                    <uix:NClick.VerifyOptions>
                      <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                        <uix:VerifyExecutionOptions.Retry>
                          <InArgument x:TypeArguments="x:Boolean" />
                        </uix:VerifyExecutionOptions.Retry>
                        <uix:VerifyExecutionOptions.Timeout>
                          <InArgument x:TypeArguments="x:Double" />
                        </uix:VerifyExecutionOptions.Timeout>
                      </uix:VerifyExecutionOptions>
                    </uix:NClick.VerifyOptions>
                  </uix:NClick>
                  <uix:NGetText DisplayName="Get Text 'Credit Card CVC'" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="556.8,189.6" sap2010:WorkflowViewState.IdRef="NGetText_7" ScopeIdentifier="c29b4aa2-9547-478c-aa3f-89556c510e4e" Version="V4">
                    <uix:NGetText.Target>
                      <uix:TargetAnchorable BrowserURL="bb.fastgem.net/orders-2/submissions/submission/7" ContentHash="n9kJxdM5D0y6h3ELJsXrWQ" DesignTimeRectangle="1864, 937, 496, 41" DesignTimeScaleFactor="1.5" ElementType="InputBox" FuzzySelectorArgument="&lt;webctrl name='jform[credit_card_data][credit_card_data0][credit_card_cvc]' tag='INPUT' type='text' class='input-append ' aaname=' &amp;#x9;Credit Card CVC' /&gt;" Guid="546c18c2-d51a-46a0-8175-67c1bcba0649" InformativeScreenshot="ad2c32cd5c0c23c617f9dc093ca97001.png" IsResponsive="True" Reference="8RhyklEjiEifip1A7a44sA/mEa-R1Xpa0W4VSNm7h0WwA" ScopeSelectorArgument="&lt;html app='chrome.exe' title='Client Details' /&gt;" SearchSteps="FuzzySelector" Version="V5" Visibility="Interactive">
                        <uix:TargetAnchorable.Anchors>
                          <scg:List x:TypeArguments="uix:ITarget" Capacity="1">
                            <uix:Target DesignTimeRectangle="1864, 911, 551, 26" ElementType="Text" FuzzySelectorArgument="&lt;webctrl aaname=' &amp;#x9;Credit Card CVC' parentid='fast-subform-inner-credit_card_data' tag='LABEL' type='' class='' check:innerText='Credit Card CVC' /&gt;" Guid="1f201cf4-16ad-4a5e-9eb6-c9ba218e17f7" SearchSteps="FuzzySelector" />
                          </scg:List>
                        </uix:TargetAnchorable.Anchors>
                      </uix:TargetAnchorable>
                    </uix:NGetText.Target>
                    <uix:NGetText.TextString>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_37">CVC</CSharpReference>
                      </OutArgument>
                    </uix:NGetText.TextString>
                  </uix:NGetText>
                  <Sequence DisplayName="Extract the information needed for Advanced MD" sap:VirtualizedContainerService.HintSize="556.8,4342.4" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="523.2,176" sap2010:WorkflowViewState.IdRef="LogMessage_1">
                      <ui:LogMessage.Message>
                        <InArgument x:TypeArguments="x:Object">
                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">System.Text.RegularExpressions.Regex.Match(rawData, @"first_name:\s*(?&lt;v&gt;[^,\r\n]+)").Groups["v"].Value.Trim()</CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Message>
                    </ui:LogMessage>
                    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="523.2,554.4" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_20">patientFName</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">System.Text.RegularExpressions.Regex.Match(rawData, @"first_name:\s*(?&lt;v&gt;[^,\r\n]+)").Groups["v"].Value.Trim()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_21">patientLName</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">System.Text.RegularExpressions.Regex.Match(rawData, @"last_name:\s*(?&lt;v&gt;[^,\r\n]+)").Groups["v"].Value.Trim()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_22">patientAge</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">(System.Text.RegularExpressions.Regex.Match(rawData, @"\bage:\s*(?&lt;v&gt;\d+)").Groups["v"].Value)</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_23">address</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">System.Text.RegularExpressions.Regex.Match(rawData, @"\baddress:\s*(?&lt;v&gt;[^,\r\n]+)").Groups["v"].Value.Trim()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_24">city</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">System.Text.RegularExpressions.Regex.Match(rawData, @"\bcity:\s*(?&lt;v&gt;[^,\r\n]+)").Groups["v"].Value.Trim()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_25">state</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">System.Text.RegularExpressions.Regex.Match(rawData, @"us_state:\s*\[?(?&lt;v&gt;[A-Z]{2})\]?").Groups["v"].Value</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_26">zipCode</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">System.Text.RegularExpressions.Regex.Match(rawData, @"zipcode:\s*(?&lt;v&gt;\d{5})").Groups["v"].Value</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_27">email</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">System.Text.RegularExpressions.Regex.Match(rawData, @"email:\s*(?&lt;v&gt;[^,\r\n]+)").Groups["v"].Value.Trim()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_28">serviceType</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_13">System.Text.RegularExpressions.Regex.Match(rawData, @"specify_service:\s*\[(?&lt;v&gt;[^\]]+)\]").Groups["v"].Value</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_29">preferredProvider</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">System.Text.RegularExpressions.Regex.Match(rawData, @"preferred_provider:\s*\[(?&lt;v&gt;[^\]]+)\]").Groups["v"].Value</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_30">visitReason</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">System.Text.RegularExpressions.Regex.Match(rawData, @"reason_for_visit:\s*(?&lt;v&gt;[^,\r\n]+)").Groups["v"].Value.Trim()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_31">custodyDecision</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">System.Text.RegularExpressions.Regex.Match(rawData, @"custody_arrangement:\s*(?&lt;v&gt;[^,\r\n]+)").Groups["v"].Value.Trim()</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_32">phone</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">System.Text.RegularExpressions.Regex.Match(rawData, @"primary_phone:\s*(?&lt;v&gt;\d+)").Groups["v"].Value</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">
                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_38">files</CSharpReference>
                              </OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19" xml:space="preserve">System.Text.RegularExpressions.Regex.Match(
  rawData,
  @"file1:\s*(?&lt;v&gt;[\s\S]*?)\s*,\s*formId",
  System.Text.RegularExpressions.RegexOptions.Singleline
).Groups["v"].Value</CSharpValue>
                              </InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                    </ui:MultipleAssign>
                    <Assign sap:VirtualizedContainerService.HintSize="523.2,114.4" sap2010:WorkflowViewState.IdRef="Assign_3">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:String[]">
                          <CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_39">fileArray</CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:String[]">
                          <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">files.Split(new char[]{','}, StringSplitOptions.RemoveEmptyEntries)</CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each currentText" sap:VirtualizedContainerService.HintSize="523.2,3072" sap2010:WorkflowViewState.IdRef="ForEach`1_1">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="x:String">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:String" Name="currentText" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="521.6,2941.6" sap2010:WorkflowViewState.IdRef="Sequence_5">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="upr:ILocalResource" Name="DownloadedFile" />
                              <Variable x:TypeArguments="uisad:DocumentData" Name="ClassifiedData" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <uasf:DownloadFileFromUrl FileName="{x:Null}" Timeout="{x:Null}" UserAgentHeader="{x:Null}" ConflictResolution="Rename" DisplayName="Download File from URL" sap:VirtualizedContainerService.HintSize="488,122.4" sap2010:WorkflowViewState.IdRef="DownloadFileFromUrl_1">
                              <uasf:DownloadFileFromUrl.ResponseAttachment>
                                <OutArgument x:TypeArguments="upr:ILocalResource">
                                  <CSharpReference x:TypeArguments="upr:ILocalResource" sap2010:WorkflowViewState.IdRef="CSharpReference`1_40">DownloadedFile</CSharpReference>
                                </OutArgument>
                              </uasf:DownloadFileFromUrl.ResponseAttachment>
                              <uasf:DownloadFileFromUrl.Url>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">downlaodUrl + currentText</CSharpValue>
                                </InArgument>
                              </uasf:DownloadFileFromUrl.Url>
                            </uasf:DownloadFileFromUrl>
                            <p:ClassifyDocument ApiKey="{x:Null}" ClassifierResult="{x:Null}" DocumentObjectModel="{x:Null}" DocumentPath="{x:Null}" DocumentText="{x:Null}" DocumentTypes="{x:Null}" PersistenceId="{x:Null}" PredictionId="{x:Null}" Prompt="{x:Null}" ClassifierId="b42cba71-e10b-f011-90cd-6045bdf056b8" DisplayName="Classify Document" Endpoint="https://cloud.uipath.com/1f8119f7-4993-4ba4-8d5e-bc757095de38/fbe4cf4b-3c41-4d6d-aa0c-371ed57df4f8/du_/api/framework/projects/0da1be7c-810a-f011-90cd-00224830e0e8/classifiers/b42cba71-e10b-f011-90cd-6045bdf056b8/classification/start?api-version=1.0" sap:VirtualizedContainerService.HintSize="488,283.2" sap2010:WorkflowViewState.IdRef="ClassifyDocument_1" MinimumConfidence="50" ProjectId="0da1be7c-810a-f011-90cd-00224830e0e8" TimeoutInSeconds="3600">
                              <p:ClassifyDocument.ClassificationResults>
                                <OutArgument x:TypeArguments="uisad:DocumentData">
                                  <CSharpReference x:TypeArguments="uisad:DocumentData" sap2010:WorkflowViewState.IdRef="CSharpReference`1_41">ClassifiedData</CSharpReference>
                                </OutArgument>
                              </p:ClassifyDocument.ClassificationResults>
                              <p:ClassifyDocument.FileInput>
                                <InArgument x:TypeArguments="upr:IResource">
                                  <CSharpValue x:TypeArguments="upr:IResource" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">DownloadedFile</CSharpValue>
                                </InArgument>
                              </p:ClassifyDocument.FileInput>
                              <p:ClassifyDocument.GptPromptWithVariables>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                              </p:ClassifyDocument.GptPromptWithVariables>
                            </p:ClassifyDocument>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="488,176" sap2010:WorkflowViewState.IdRef="LogMessage_3">
                              <ui:LogMessage.Message>
                                <InArgument x:TypeArguments="x:Object">
                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24">ClassifiedData.DocumentType.Id</CSharpValue>
                                </InArgument>
                              </ui:LogMessage.Message>
                            </ui:LogMessage>
                            <If sap:VirtualizedContainerService.HintSize="488,2252" sap2010:WorkflowViewState.IdRef="If_1">
                              <If.Condition>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">ClassifiedData.DocumentType.Id == in_InsFrontId</CSharpValue>
                                </InArgument>
                              </If.Condition>
                              <If.Then>
                                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="486.4,527.2" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:String" Name="fileType" />
                                    <Variable x:TypeArguments="uisad1:IDocumentData(uisaseib:IntakesInsuranceCardV1)" Name="InsDocumentData" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <p:ExtractDocumentDataWithDocumentData x:TypeArguments="uisaseib:IntakesInsuranceCardV1" DocumentBounds="{x:Null}" DocumentObjectModel="{x:Null}" DocumentPath="{x:Null}" DocumentText="{x:Null}" ExtractorDocumentType="{x:Null}" ExtractorResult="{x:Null}" PersistenceId="{x:Null}" PredictionId="{x:Null}" Prompt="{x:Null}" ApplyAutoValidation="False" DisplayName="Extract Document Data" DocType="b22cba71-e10b-f011-90cd-6045bdf056b8" GenerateData="True" sap:VirtualizedContainerService.HintSize="452.8,300" sap2010:WorkflowViewState.IdRef="ExtractDocumentDataWithDocumentData`1_1" ProjectId="0da1be7c-810a-f011-90cd-00224830e0e8" TimeoutInSeconds="3600">
                                    <p:ExtractDocumentDataWithDocumentData.AutoValidationConfidenceThreshold>
                                      <InArgument x:TypeArguments="s:Nullable(x:Int32)">
                                        <Literal x:TypeArguments="s:Nullable(x:Int32)" Value="0" />
                                      </InArgument>
                                    </p:ExtractDocumentDataWithDocumentData.AutoValidationConfidenceThreshold>
                                    <p:ExtractDocumentDataWithDocumentData.ExtractionResults>
                                      <OutArgument x:TypeArguments="uisad1:IDocumentData(uisaseib:IntakesInsuranceCardV1)">
                                        <CSharpReference x:TypeArguments="uisad1:IDocumentData(uisaseib:IntakesInsuranceCardV1)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_42">InsDocumentData</CSharpReference>
                                      </OutArgument>
                                    </p:ExtractDocumentDataWithDocumentData.ExtractionResults>
                                    <p:ExtractDocumentDataWithDocumentData.FileInput>
                                      <InArgument x:TypeArguments="upr:IResource">
                                        <CSharpValue x:TypeArguments="upr:IResource" sap2010:WorkflowViewState.IdRef="CSharpValue`1_26">ClassifiedData</CSharpValue>
                                      </InArgument>
                                    </p:ExtractDocumentDataWithDocumentData.FileInput>
                                    <p:ExtractDocumentDataWithDocumentData.GptPromptWithVariables>
                                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                    </p:ExtractDocumentDataWithDocumentData.GptPromptWithVariables>
                                  </p:ExtractDocumentDataWithDocumentData>
                                  <ui:RenameFileX DisplayName="Rename File" sap:VirtualizedContainerService.HintSize="452.8,167.2" sap2010:WorkflowViewState.IdRef="RenameFileX_1" KeepExtension="True" NewName="InsFront">
                                    <ui:RenameFileX.FilePath>
                                      <InArgument x:TypeArguments="x:String">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">DownloadedFile.FullName</CSharpValue>
                                      </InArgument>
                                    </ui:RenameFileX.FilePath>
                                  </ui:RenameFileX>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Else" sap:VirtualizedContainerService.HintSize="486.4,1586.4" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If sap:VirtualizedContainerService.HintSize="452.8,1495.2" sap2010:WorkflowViewState.IdRef="If_2">
                                    <If.Condition>
                                      <InArgument x:TypeArguments="x:Boolean">
                                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">ClassifiedData.DocumentType.Id == in_InsBackId</CSharpValue>
                                      </InArgument>
                                    </If.Condition>
                                    <If.Then>
                                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="451.2,511.2" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="uisad1:IDocumentData(uisaseib1:IntakesInsuranceCardBackV1)" Name="BackDocumentData" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <p:ExtractDocumentDataWithDocumentData x:TypeArguments="uisaseib1:IntakesInsuranceCardBackV1" DocumentBounds="{x:Null}" DocumentObjectModel="{x:Null}" DocumentPath="{x:Null}" DocumentText="{x:Null}" ExtractorDocumentType="{x:Null}" ExtractorResult="{x:Null}" PersistenceId="{x:Null}" PredictionId="{x:Null}" Prompt="{x:Null}" ApplyAutoValidation="False" DisplayName="Extract Document Data" DocType="b32cba71-e10b-f011-90cd-6045bdf056b8" GenerateData="True" sap:VirtualizedContainerService.HintSize="417.6,284" sap2010:WorkflowViewState.IdRef="ExtractDocumentDataWithDocumentData`1_2" ProjectId="0da1be7c-810a-f011-90cd-00224830e0e8" TimeoutInSeconds="3600">
                                          <p:ExtractDocumentDataWithDocumentData.AutoValidationConfidenceThreshold>
                                            <InArgument x:TypeArguments="s:Nullable(x:Int32)">
                                              <Literal x:TypeArguments="s:Nullable(x:Int32)" Value="0" />
                                            </InArgument>
                                          </p:ExtractDocumentDataWithDocumentData.AutoValidationConfidenceThreshold>
                                          <p:ExtractDocumentDataWithDocumentData.ExtractionResults>
                                            <OutArgument x:TypeArguments="uisad1:IDocumentData(uisaseib1:IntakesInsuranceCardBackV1)">
                                              <CSharpReference x:TypeArguments="uisad1:IDocumentData(uisaseib1:IntakesInsuranceCardBackV1)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_43">BackDocumentData</CSharpReference>
                                            </OutArgument>
                                          </p:ExtractDocumentDataWithDocumentData.ExtractionResults>
                                          <p:ExtractDocumentDataWithDocumentData.FileInput>
                                            <InArgument x:TypeArguments="upr:IResource">
                                              <CSharpValue x:TypeArguments="upr:IResource" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">ClassifiedData</CSharpValue>
                                            </InArgument>
                                          </p:ExtractDocumentDataWithDocumentData.FileInput>
                                          <p:ExtractDocumentDataWithDocumentData.GptPromptWithVariables>
                                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                          </p:ExtractDocumentDataWithDocumentData.GptPromptWithVariables>
                                        </p:ExtractDocumentDataWithDocumentData>
                                        <ui:RenameFileX DisplayName="Rename File" sap:VirtualizedContainerService.HintSize="417.6,167.2" sap2010:WorkflowViewState.IdRef="RenameFileX_2" KeepExtension="True" NewName="InsBack">
                                          <ui:RenameFileX.FilePath>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_30">DownloadedFile.FullName</CSharpValue>
                                            </InArgument>
                                          </ui:RenameFileX.FilePath>
                                        </ui:RenameFileX>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="451.2,854.4" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If sap:VirtualizedContainerService.HintSize="417.6,794.4" sap2010:WorkflowViewState.IdRef="If_3">
                                          <If.Condition>
                                            <InArgument x:TypeArguments="x:Boolean">
                                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">ClassifiedData.DocumentType.Id == in_FormId</CSharpValue>
                                            </InArgument>
                                          </If.Condition>
                                          <If.Then>
                                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,575.2" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="uisad1:IDocumentData(uisaseib2:IntakesIntakeFormV1)" Name="FormDocumentData" />
                                              </Sequence.Variables>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <p:ExtractDocumentDataWithDocumentData x:TypeArguments="uisaseib2:IntakesIntakeFormV1" DocumentBounds="{x:Null}" DocumentObjectModel="{x:Null}" DocumentPath="{x:Null}" DocumentText="{x:Null}" ExtractorDocumentType="{x:Null}" ExtractorResult="{x:Null}" PersistenceId="{x:Null}" PredictionId="{x:Null}" Prompt="{x:Null}" ApplyAutoValidation="False" DisplayName="Extract Document Data" DocType="b52cba71-e10b-f011-90cd-6045bdf056b8" GenerateData="True" sap:VirtualizedContainerService.HintSize="382.4,348" sap2010:WorkflowViewState.IdRef="ExtractDocumentDataWithDocumentData`1_3" ProjectId="0da1be7c-810a-f011-90cd-00224830e0e8" TimeoutInSeconds="3600">
                                                <p:ExtractDocumentDataWithDocumentData.AutoValidationConfidenceThreshold>
                                                  <InArgument x:TypeArguments="s:Nullable(x:Int32)">
                                                    <Literal x:TypeArguments="s:Nullable(x:Int32)" Value="0" />
                                                  </InArgument>
                                                </p:ExtractDocumentDataWithDocumentData.AutoValidationConfidenceThreshold>
                                                <p:ExtractDocumentDataWithDocumentData.ExtractionResults>
                                                  <OutArgument x:TypeArguments="uisad1:IDocumentData(uisaseib2:IntakesIntakeFormV1)">
                                                    <CSharpReference x:TypeArguments="uisad1:IDocumentData(uisaseib2:IntakesIntakeFormV1)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_44">FormDocumentData</CSharpReference>
                                                  </OutArgument>
                                                </p:ExtractDocumentDataWithDocumentData.ExtractionResults>
                                                <p:ExtractDocumentDataWithDocumentData.FileInput>
                                                  <InArgument x:TypeArguments="upr:IResource">
                                                    <CSharpValue x:TypeArguments="upr:IResource" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">ClassifiedData</CSharpValue>
                                                  </InArgument>
                                                </p:ExtractDocumentDataWithDocumentData.FileInput>
                                                <p:ExtractDocumentDataWithDocumentData.GptPromptWithVariables>
                                                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                </p:ExtractDocumentDataWithDocumentData.GptPromptWithVariables>
                                              </p:ExtractDocumentDataWithDocumentData>
                                              <ui:RenameFileX DisplayName="Rename File" sap:VirtualizedContainerService.HintSize="382.4,167.2" sap2010:WorkflowViewState.IdRef="RenameFileX_3" KeepExtension="True" NewName="NPP">
                                                <ui:RenameFileX.FilePath>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33">DownloadedFile.FullName</CSharpValue>
                                                  </InArgument>
                                                </ui:RenameFileX.FilePath>
                                              </ui:RenameFileX>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </If.Else>
                            </If>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="488,48" sap2010:WorkflowViewState.IdRef="Sequence_7">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <uga:SendEmailConnections ArgumentAttachmentPaths="{x:Null}" ArgumentAttachments="{x:Null}" AttachmentPaths="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" ConnectionAccountName="{x:Null}" ContinueOnError="{x:Null}" ReplyTo="{x:Null}" SingleAttachment="{x:Null}" TextBody="{x:Null}" AttachmentInputMode="UseExisting" AuthScopesInvalid="False" ConnectionId="07b47295-d01d-45f7-b1b8-f42c9fa4d006" DisplayName="Send Email" sap:VirtualizedContainerService.HintSize="590.4,504" sap2010:WorkflowViewState.IdRef="SendEmailConnections_1" Importance="Normal" InputType="HTML" SaveAsDraft="False" Subject="Intakes Error" UseConnectionService="True">
                                <uga:SendEmailConnections.Attachments>
                                  <InArgument x:TypeArguments="scg:IEnumerable(upr:IResource)" />
                                </uga:SendEmailConnections.Attachments>
                                <uga:SendEmailConnections.AttachmentsBackup>
                                  <usau:BackupSlot x:TypeArguments="ugage:AttachmentInputMode" StoredValue="UseExisting">
                                    <usau:BackupSlot.BackupValues>
                                      <scg:Dictionary x:TypeArguments="ugage:AttachmentInputMode, scg:List(x:Object)" />
                                    </usau:BackupSlot.BackupValues>
                                  </usau:BackupSlot>
                                </uga:SendEmailConnections.AttachmentsBackup>
                                <uga:SendEmailConnections.Body>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">string.Format("&lt;P&gt;&lt;SPAN&gt;The intake bot failed out for {emailName}&lt;/SPAN&gt;&lt;/P&gt;")</CSharpValue>
                                  </InArgument>
                                </uga:SendEmailConnections.Body>
                                <uga:SendEmailConnections.InputTypeBackup>
                                  <usau:BackupSlot x:TypeArguments="ugage:BodyInputType" StoredValue="HTML">
                                    <usau:BackupSlot.BackupValues>
                                      <scg:Dictionary x:TypeArguments="ugage:BodyInputType, scg:List(x:Object)" />
                                    </usau:BackupSlot.BackupValues>
                                  </usau:BackupSlot>
                                </uga:SendEmailConnections.InputTypeBackup>
                                <uga:SendEmailConnections.To>
                                  <InArgument x:TypeArguments="scg:IEnumerable(x:String)">
                                    <CSharpValue x:TypeArguments="scg:IEnumerable(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_34">new string[]{"gabe.james@fastgem.net"}</CSharpValue>
                                  </InArgument>
                                </uga:SendEmailConnections.To>
                              </uga:SendEmailConnections>
                            </Sequence>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEach.Body>
                      <ui:ForEach.Values>
                        <InArgument x:TypeArguments="sc:IEnumerable">
                          <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">fileArray</CSharpValue>
                        </InArgument>
                      </ui:ForEach.Values>
                    </ui:ForEach>
                    <Sequence DisplayName="Format intake information" sap:VirtualizedContainerService.HintSize="523.2,56.8" sap2010:WorkflowViewState.IdRef="Sequence_13">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="guardianName" />
                        <Variable x:TypeArguments="x:String" Name="patientName" />
                        <Variable x:TypeArguments="x:String" Name="cardExpiration" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="478.6666666666667,670" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                        <ui:MultipleAssign.AssignOperations>
                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="32">
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_45">patientName</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">FormDocumentData.Data.Name.Value.ToUpper()</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_46">patientGender</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_37">FormDocumentData.Data.Gender.Value.ToUpper()</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_20">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_47">patientDOB</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_38">FormDocumentData.Data.DateOfBirth.Value</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_21">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_48">patientAge</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39">FormDocumentData.Data.Age.Value</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_22">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_49">address</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_40">FormDocumentData.Data.Address.Value</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_23">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_50">city</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_41">FormDocumentData.Data.City.Value.ToUpper()</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_24">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_51">state</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_42">FormDocumentData.Data.State.Value.ToUpper()</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_25">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_52">email</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_43">FormDocumentData.Data.EmailAddress.Value.ToUpper()</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_26">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_53">phone</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_44">FormDocumentData.Data.CellPhone.Value</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_27">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_54">guardianName</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45">FormDocumentData.Data.ParentsName.Value.ToUpper()</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_28">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_55">cardNum</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">FormDocumentData.Data.CCNumber.Value</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_29">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_56">cvv</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_47">FormDocumentData.Data.CCCVV.Value</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_30">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_57">cardExpiration</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_48">FormDocumentData.Data.CCExpirationDate.Value</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_31">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_58">serviceType</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_49">FormDocumentData.Data.ServiceType.Value</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_32">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_59">preferredProvider</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_50">FormDocumentData.Data.Provider.Value</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_33">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_60">visitReason</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_51">FormDocumentData.Data.VisitReason.Value</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_34">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_61">custodyDecision</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_52">FormDocumentData.Data.CustodyDecisionMaking.Value</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_35">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_62">zipCode</CSharpReference>
                                </OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_53">FormDocumentData.Data.ZipCode.Value.ToString()</CSharpValue>
                                </InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                          </scg:List>
                        </ui:MultipleAssign.AssignOperations>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:MultipleAssign>
                      <Sequence DisplayName="Remove exra characters from DOB and State" sap:VirtualizedContainerService.HintSize="478.6666666666667,57.333333333333336" sap2010:WorkflowViewState.IdRef="Sequence_22">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="434,116.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_5">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_63">state</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_54">state.Substring(0, 2)</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,107.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_6">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_64">patientDOB</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_55">patientDOB.Replace(" ", "")</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                      <Sequence DisplayName="Get the appointment Type" sap:VirtualizedContainerService.HintSize="478.6666666666667,57.333333333333336" sap2010:WorkflowViewState.IdRef="Sequence_23">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="504,961.6" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                          <ui:ForEachRow.Body>
                            <ActivityAction x:TypeArguments="sd:DataRow">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="502.4,788.8" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="key" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="468.8,113.6" sap2010:WorkflowViewState.IdRef="Assign_18">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">
                                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_65">key</CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_57">CurrentRow["Key"].ToString()</CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <If sap:VirtualizedContainerService.HintSize="468.8,615.2" sap2010:WorkflowViewState.IdRef="If_15">
                                  <If.Condition>
                                    <InArgument x:TypeArguments="x:Boolean">
                                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_58">serviceType.IndexOf(key, StringComparison.OrdinalIgnoreCase) &gt;= 0</CSharpValue>
                                    </InArgument>
                                  </If.Condition>
                                  <If.Then>
                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,396" sap2010:WorkflowViewState.IdRef="Sequence_58">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_33">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">
                                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_66">serviceType</CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">
                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_59">CurrentRow["Appointment Type"].ToString()</CSharpValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.6,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_8">
                                        <ui:LogMessage.Message>
                                          <InArgument x:TypeArguments="x:Object">
                                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_60">"Found the service type it is: " + serviceType</CSharpValue>
                                          </InArgument>
                                        </ui:LogMessage.Message>
                                      </ui:LogMessage>
                                      <ui:Break sap:VirtualizedContainerService.HintSize="433.6,48" sap2010:WorkflowViewState.IdRef="Break_1" />
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="467.2,89.6" sap2010:WorkflowViewState.IdRef="Sequence_59">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEachRow.Body>
                          <ui:ForEachRow.DataTable>
                            <InArgument x:TypeArguments="sd:DataTable">
                              <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_56">in_ApptTypeDT</CSharpValue>
                            </InArgument>
                          </ui:ForEachRow.DataTable>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ForEachRow>
                      </Sequence>
                      <Sequence DisplayName="Get the relationship" sap:VirtualizedContainerService.HintSize="478.6666666666667,57.333333333333336" sap2010:WorkflowViewState.IdRef="Sequence_24">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If sap:VirtualizedContainerService.HintSize="468.8,686.4" sap2010:WorkflowViewState.IdRef="If_7">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_61">int.Parse(patientAge) &lt; 18</CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,278.4" sap2010:WorkflowViewState.IdRef="Sequence_40">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_14">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_67">relationship</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Child</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_15">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">
                                    <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_68">isMinor</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="467.2,278.4" sap2010:WorkflowViewState.IdRef="Sequence_41">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_16">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_69">relationship</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Self</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_17">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">
                                    <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_70">isMinor</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                      <Sequence DisplayName="Split the name into first and last" sap:VirtualizedContainerService.HintSize="478.6666666666667,57.333333333333336" sap2010:WorkflowViewState.IdRef="Sequence_25">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="434,116.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_7">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_71">patientFName</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_62">System.Text.RegularExpressions.Regex.Match(patientName, @"^(?&lt;firstName&gt;\S+)").Groups["firstName"].Value;</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,116.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_8">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_72">patientLName</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_63">System.Text.RegularExpressions.Regex.Match(patientName, @"(?&lt;lastName&gt;\S+)$").Groups["lastName"].Value;</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,116.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_9">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_73">guardianFName</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_64">System.Text.RegularExpressions.Regex.Match(guardianName, @"^(?&lt;firstName&gt;\S+)").Groups["firstName"].Value;</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_10">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_74">guardianLName</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_65">System.Text.RegularExpressions.Regex.Match(guardianName, @"(?&lt;lastName&gt;\S+)$").Groups["lastName"].Value;</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                      <Assign sap:VirtualizedContainerService.HintSize="478.6666666666667,116.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_4">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_75">patientGender</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_66">patientGender.Substring(0,1).ToUpper() == "M" ? "Male" : patientGender.Substring(0,1).ToUpper() == "F" ? "Female" : "Unknown";</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <Sequence DisplayName="Card expiration Formatting" sap:VirtualizedContainerService.HintSize="478.6666666666667,101.33333333333333" sap2010:WorkflowViewState.IdRef="Sequence_26">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_11">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_76">cardMonthExpiration</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_67">System.Text.RegularExpressions.Regex.Match(cardExpiration, @"^(?&lt;month&gt;\d{2})").Groups["month"].Value;</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_12">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_77">cardYearExpiration</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_68">"20" + System.Text.RegularExpressions.Regex.Match(cardExpiration, @"(?&lt;year&gt;\d{2})$").Groups["year"].Value;</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_13">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_78">cardType</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_69">cardNum.StartsWith("3") ? "AMEX" : cardNum.StartsWith("4") ? "VISA" : cardNum.StartsWith("5") ? "MASTERCARD" : cardNum.StartsWith("6") ? "DISCOVER" : "UNKNOWN"</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="478.6666666666667,166" sap2010:WorkflowViewState.IdRef="LogMessage_4">
                        <ui:LogMessage.Message>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_70">"Test"</CSharpValue>
                          </InArgument>
                        </ui:LogMessage.Message>
                      </ui:LogMessage>
                    </Sequence>
                    <If sap:VirtualizedContainerService.HintSize="523.2,56.8" sap2010:WorkflowViewState.IdRef="If_4">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_71">serviceType != "ABA"</CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="Sequence_19">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="548,3438.4" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch.Try>
                              <Sequence DisplayName="Try" sap:VirtualizedContainerService.HintSize="546.4,2261.6" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Sequence DisplayName="Insurance Card Information formatting" sap:VirtualizedContainerService.HintSize="512.8,2201.6" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:String" Name="insSupportPhone" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="478.4,336.8" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                                    <ui:MultipleAssign.AssignOperations>
                                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_36">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">
                                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_79">carrier</CSharpReference>
                                            </OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_72">InsDocumentData.Data.Carrier.Value</CSharpValue>
                                            </InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_37">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">
                                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_80">insName</CSharpReference>
                                            </OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_73">InsDocumentData.Data.MemberName.Value</CSharpValue>
                                            </InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_38">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">
                                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_81">insMemberId</CSharpReference>
                                            </OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_74">InsDocumentData.Data.MemberID.Value</CSharpValue>
                                            </InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_39">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">
                                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_82">insGroup</CSharpReference>
                                            </OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_75">InsDocumentData.Data.GroupNumber.Value</CSharpValue>
                                            </InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_40">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">
                                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_83">insNetwork</CSharpReference>
                                            </OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_76">InsDocumentData.Data.Network.Value</CSharpValue>
                                            </InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_41">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">
                                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_84">insPlan</CSharpReference>
                                            </OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_77">InsDocumentData.Data.Plan.Value</CSharpValue>
                                            </InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_42">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">
                                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_85">insSupportPhone</CSharpReference>
                                            </OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_78">InsDocumentData.Data.CustomerSupportPhone.Value</CSharpValue>
                                            </InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                      </scg:List>
                                    </ui:MultipleAssign.AssignOperations>
                                  </ui:MultipleAssign>
                                  <If sap:VirtualizedContainerService.HintSize="478.4,528.8" sap2010:WorkflowViewState.IdRef="If_16">
                                    <If.Condition>
                                      <InArgument x:TypeArguments="x:Boolean">
                                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_79">insNetwork.Contains("Community") || insPlan.Contains("Community")</CSharpValue>
                                      </InArgument>
                                    </If.Condition>
                                    <If.Then>
                                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,164.8" sap2010:WorkflowViewState.IdRef="Sequence_60">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_34">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">
                                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_86">carrier</CSharpReference>
                                            </OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">Medicaid</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="467.2,225.6" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.6,165.6" sap2010:WorkflowViewState.IdRef="LogMessage_9">
                                          <ui:LogMessage.Message>
                                            <InArgument x:TypeArguments="x:Object">
                                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_80">"Did not find community plan"</CSharpValue>
                                            </InArgument>
                                          </ui:LogMessage.Message>
                                        </ui:LogMessage>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="478.4,84.8" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                                    <ui:ForEachRow.Body>
                                      <ActivityAction x:TypeArguments="sd:DataRow">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="504,913.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:String" Name="key" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="470,116.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_35">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">
                                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_87">key</CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">
                                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_82">CurrentRow["Key"].ToString()</CSharpValue>
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <If sap:VirtualizedContainerService.HintSize="470,736.6666666666666" sap2010:WorkflowViewState.IdRef="If_19">
                                            <If.Condition>
                                              <InArgument x:TypeArguments="x:Boolean">
                                                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_83">carrier.IndexOf(key, StringComparison.OrdinalIgnoreCase) &gt;= 0</CSharpValue>
                                              </InArgument>
                                            </If.Condition>
                                            <If.Then>
                                              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="468,516.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_68">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign sap:VirtualizedContainerService.HintSize="434,116.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_39">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">
                                                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_88">carrier</CSharpReference>
                                                    </OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_84">CurrentRow["Carrier"].ToString()</CSharpValue>
                                                    </InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,175.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_11">
                                                  <ui:LogMessage.Message>
                                                    <InArgument x:TypeArguments="x:Object">
                                                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_85">"Found the carrier it is: " + carrier</CSharpValue>
                                                    </InArgument>
                                                  </ui:LogMessage.Message>
                                                </ui:LogMessage>
                                                <Assign sap:VirtualizedContainerService.HintSize="434,116.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_40">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Boolean">
                                                      <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_89">insuranceFound</CSharpReference>
                                                    </OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:Break sap:VirtualizedContainerService.HintSize="434,48" sap2010:WorkflowViewState.IdRef="Break_2" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="468,90" sap2010:WorkflowViewState.IdRef="Sequence_69">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ForEachRow.Body>
                                    <ui:ForEachRow.DataTable>
                                      <InArgument x:TypeArguments="sd:DataTable">
                                        <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_81">in_CarrierDT</CSharpValue>
                                      </InArgument>
                                    </ui:ForEachRow.DataTable>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ForEachRow>
                                  <Sequence DisplayName="Check for Self Pay" sap:VirtualizedContainerService.HintSize="478.4,100.8" sap2010:WorkflowViewState.IdRef="Sequence_57">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If sap:VirtualizedContainerService.HintSize="470,700.6666666666666" sap2010:WorkflowViewState.IdRef="If_18">
                                      <If.Condition>
                                        <InArgument x:TypeArguments="x:Boolean">
                                          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_86">carrier == "Self Pay"</CSharpValue>
                                        </InArgument>
                                      </If.Condition>
                                      <If.Then>
                                        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="468,344.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_65">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Gmail_SendEmail - Invoke Workflow File (Gmail\\Gmail_SendEmail.xaml)" sap:VirtualizedContainerService.HintSize="434,177.33333333333334" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Gmail\\Gmail_SendEmail.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_EmailType">Self Pay Medicaid</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_EmailAddress">
                                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_87">email</CSharpValue>
                                              </InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <Assign sap:VirtualizedContainerService.HintSize="434,107.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_37">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">
                                                <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_90">isComplete</CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="468,226" sap2010:WorkflowViewState.IdRef="Sequence_66">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,166" sap2010:WorkflowViewState.IdRef="LogMessage_10">
                                            <ui:LogMessage.Message>
                                              <InArgument x:TypeArguments="x:Object">
                                                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_88">"Not self pay"</CSharpValue>
                                              </InArgument>
                                            </ui:LogMessage.Message>
                                          </ui:LogMessage>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                  <ui:FilterDataTable DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="478.4,194.4" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" SelectColumnsMode="Remove">
                                    <ui:FilterDataTable.DataTable>
                                      <InArgument x:TypeArguments="sd:DataTable">
                                        <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_97">in_ProviderDT</CSharpValue>
                                      </InArgument>
                                    </ui:FilterDataTable.DataTable>
                                    <ui:FilterDataTable.Filters>
                                      <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                        <ui:FilterOperationArgument BooleanOperator="And" Operator="LT">
                                          <ui:FilterOperationArgument.Column>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_89">"Age Min"</CSharpValue>
                                            </InArgument>
                                          </ui:FilterOperationArgument.Column>
                                          <ui:FilterOperationArgument.Operand>
                                            <InArgument x:TypeArguments="x:Int32">
                                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_90">int.Parse(patientAge)</CSharpValue>
                                            </InArgument>
                                          </ui:FilterOperationArgument.Operand>
                                        </ui:FilterOperationArgument>
                                        <ui:FilterOperationArgument BooleanOperator="And" Operator="GT">
                                          <ui:FilterOperationArgument.Column>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_91">"Age Max"</CSharpValue>
                                            </InArgument>
                                          </ui:FilterOperationArgument.Column>
                                          <ui:FilterOperationArgument.Operand>
                                            <InArgument x:TypeArguments="x:Int32">
                                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_92">int.Parse(patientAge)</CSharpValue>
                                            </InArgument>
                                          </ui:FilterOperationArgument.Operand>
                                        </ui:FilterOperationArgument>
                                        <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                          <ui:FilterOperationArgument.Column>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_93">carrier</CSharpValue>
                                            </InArgument>
                                          </ui:FilterOperationArgument.Column>
                                          <ui:FilterOperationArgument.Operand>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_94">"X"</CSharpValue>
                                            </InArgument>
                                          </ui:FilterOperationArgument.Operand>
                                        </ui:FilterOperationArgument>
                                        <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                          <ui:FilterOperationArgument.Column>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_95">serviceType</CSharpValue>
                                            </InArgument>
                                          </ui:FilterOperationArgument.Column>
                                          <ui:FilterOperationArgument.Operand>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_96">"X"</CSharpValue>
                                            </InArgument>
                                          </ui:FilterOperationArgument.Operand>
                                        </ui:FilterOperationArgument>
                                      </scg:List>
                                    </ui:FilterDataTable.Filters>
                                    <ui:FilterDataTable.OutputDataTable>
                                      <OutArgument x:TypeArguments="sd:DataTable">
                                        <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_91">in_ProviderDT</CSharpReference>
                                      </OutArgument>
                                    </ui:FilterDataTable.OutputDataTable>
                                    <ui:FilterDataTable.SelectColumns>
                                      <scg:List x:TypeArguments="InArgument" Capacity="4">
                                        <x:Null />
                                      </scg:List>
                                    </ui:FilterDataTable.SelectColumns>
                                  </ui:FilterDataTable>
                                  <Assign sap:VirtualizedContainerService.HintSize="478.4,113.6" sap2010:WorkflowViewState.IdRef="Assign_19">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="scg:List(x:String)">
                                        <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_92">providersList</CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="scg:List(x:String)">
                                        <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_98">new List&lt;string&gt;()</CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="478.4,346.4" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
                                    <ui:ForEachRow.Body>
                                      <ActivityAction x:TypeArguments="sd:DataRow">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="467.2,164.8" sap2010:WorkflowViewState.IdRef="Sequence_62">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_36">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="scg:List(x:String)">
                                                <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_93">providersList</CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="scg:List(x:String)">
                                                <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_100">providersList.Concat(new[] { CurrentRow[0].ToString() }).ToList()</CSharpValue>
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ForEachRow.Body>
                                    <ui:ForEachRow.DataTable>
                                      <InArgument x:TypeArguments="sd:DataTable">
                                        <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_99">in_ProviderDT</CSharpValue>
                                      </InArgument>
                                    </ui:ForEachRow.DataTable>
                                  </ui:ForEachRow>
                                  <ui:FilterDataTable DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="478.4,194.4" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" SelectColumnsMode="Remove">
                                    <ui:FilterDataTable.DataTable>
                                      <InArgument x:TypeArguments="sd:DataTable">
                                        <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_103">in_InsuranceDT</CSharpValue>
                                      </InArgument>
                                    </ui:FilterDataTable.DataTable>
                                    <ui:FilterDataTable.Filters>
                                      <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                        <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                          <ui:FilterOperationArgument.Column>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_101">"Provider Name"</CSharpValue>
                                            </InArgument>
                                          </ui:FilterOperationArgument.Column>
                                          <ui:FilterOperationArgument.Operand>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_102">providersList[0]</CSharpValue>
                                            </InArgument>
                                          </ui:FilterOperationArgument.Operand>
                                        </ui:FilterOperationArgument>
                                      </scg:List>
                                    </ui:FilterDataTable.Filters>
                                    <ui:FilterDataTable.OutputDataTable>
                                      <OutArgument x:TypeArguments="sd:DataTable">
                                        <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_94">in_InsuranceDT</CSharpReference>
                                      </OutArgument>
                                    </ui:FilterDataTable.OutputDataTable>
                                    <ui:FilterDataTable.SelectColumns>
                                      <scg:List x:TypeArguments="InArgument" Capacity="4">
                                        <x:Null />
                                      </scg:List>
                                    </ui:FilterDataTable.SelectColumns>
                                  </ui:FilterDataTable>
                                  <Assign sap:VirtualizedContainerService.HintSize="478.4,113.6" sap2010:WorkflowViewState.IdRef="Assign_20">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_95">providerCode</CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_104">in_InsuranceDT.Rows[0]["Insurance Pay"].ToString()</CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="478.4,104.8" sap2010:WorkflowViewState.IdRef="Assign_21">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_96">insProviderCode</CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_105">in_InsuranceDT.Rows[0][carrier].ToString()</CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="546.6666666666666,945.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="512.6666666666666,116.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_22">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Boolean">
                                          <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_97">insuranceFound</CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="512.6666666666666,116.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_23">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">
                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_98">carrier</CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Self Pay</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:FilterDataTable DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="512.6666666666666,194.66666666666666" sap2010:WorkflowViewState.IdRef="FilterDataTable_3" SelectColumnsMode="Remove">
                                      <ui:FilterDataTable.DataTable>
                                        <InArgument x:TypeArguments="sd:DataTable">
                                          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_114">in_ProviderDT</CSharpValue>
                                        </InArgument>
                                      </ui:FilterDataTable.DataTable>
                                      <ui:FilterDataTable.Filters>
                                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                          <ui:FilterOperationArgument BooleanOperator="And" Operator="LT">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:String">
                                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_106">"Age Min"</CSharpValue>
                                              </InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:Int32">
                                                <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_107">int.Parse(patientAge)</CSharpValue>
                                              </InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument BooleanOperator="And" Operator="GT">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:String">
                                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_108">"Age Max"</CSharpValue>
                                              </InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:Int32">
                                                <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_109">int.Parse(patientAge)</CSharpValue>
                                              </InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:String">
                                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_110">carrier</CSharpValue>
                                              </InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">
                                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_111">"X"</CSharpValue>
                                              </InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:String">
                                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_112">serviceType</CSharpValue>
                                              </InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">
                                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_113">"X"</CSharpValue>
                                              </InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.Filters>
                                      <ui:FilterDataTable.OutputDataTable>
                                        <OutArgument x:TypeArguments="sd:DataTable">
                                          <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_99">in_ProviderDT</CSharpReference>
                                        </OutArgument>
                                      </ui:FilterDataTable.OutputDataTable>
                                      <ui:FilterDataTable.SelectColumns>
                                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                                          <x:Null />
                                        </scg:List>
                                      </ui:FilterDataTable.SelectColumns>
                                    </ui:FilterDataTable>
                                    <Assign sap:VirtualizedContainerService.HintSize="512.6666666666666,116.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_24">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="scg:List(x:String)">
                                          <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_100">providersList</CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="scg:List(x:String)">
                                          <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_115">new List&lt;string&gt;()</CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="512.6666666666666,340.6666666666667" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
                                      <ui:ForEachRow.Body>
                                        <ActivityAction x:TypeArguments="sd:DataRow">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="468,167.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_67">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="434,107.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_38">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="scg:List(x:String)">
                                                  <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_101">providersList</CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="scg:List(x:String)">
                                                  <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_117">providersList.Concat(new[] { CurrentRow[0].ToString() }).ToList()</CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ForEachRow.Body>
                                      <ui:ForEachRow.DataTable>
                                        <InArgument x:TypeArguments="sd:DataTable">
                                          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_116">in_ProviderDT</CSharpValue>
                                        </InArgument>
                                      </ui:ForEachRow.DataTable>
                                    </ui:ForEachRow>
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                            <TryCatch.Finally>
                              <Sequence DisplayName="Finally" sap:VirtualizedContainerService.HintSize="546.6666666666666,90" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </TryCatch.Finally>
                          </TryCatch>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,91.2" sap2010:WorkflowViewState.IdRef="Sequence_20">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Sequence>
                      </If.Else>
                    </If>
                    <Sequence DisplayName="Check for Exceptions" sap:VirtualizedContainerService.HintSize="523.2,56.8" sap2010:WorkflowViewState.IdRef="Sequence_18">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="Check the Service Requested" sap:VirtualizedContainerService.HintSize="536,2364.8" sap2010:WorkflowViewState.IdRef="Sequence_27">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="If ABA send email dont process advanced md" sap:VirtualizedContainerService.HintSize="502.4,1008" sap2010:WorkflowViewState.IdRef="Sequence_30">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If sap:VirtualizedContainerService.HintSize="417.6,916" sap2010:WorkflowViewState.IdRef="If_8">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_118">serviceType == "ABA"</CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,695.2" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="382.4,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_5">
                                  <ui:LogMessage.Message>
                                    <InArgument x:TypeArguments="x:Object">
                                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_119">"Found an ABA intake"</CSharpValue>
                                    </InArgument>
                                  </ui:LogMessage.Message>
                                </ui:LogMessage>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Gmail_SendEmail - Invoke Workflow File (Gmail\\Gmail_SendEmail.xaml)" sap:VirtualizedContainerService.HintSize="382.4,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Gmail\\Gmail_SendEmail.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_EmailType">ABA</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_EmailAddress">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_120">email</CSharpValue>
                                    </InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <uga:MoveEmailConnections ConnectionAccountName="{x:Null}" ContinueOnError="{x:Null}" FolderIdBackup="{x:Reference __ReferenceID0}" ManualFolderPath="{x:Null}" Result="{x:Null}" AuthScopesInvalid="False" BrowseFolderPath="Bot Processed" BrowserFolderLabelId="Label_7287505510858458536" ConnectionId="07b47295-d01d-45f7-b1b8-f42c9fa4d006" DisplayName="Move Email" FolderInputSelectionMode="Browse" sap:VirtualizedContainerService.HintSize="382.4,236.8" sap2010:WorkflowViewState.IdRef="MoveEmailConnections_1" UseConnectionService="True">
                                  <uga:MoveEmailConnections.Email>
                                    <InArgument x:TypeArguments="ugm:GmailMessage">
                                      <CSharpValue x:TypeArguments="ugm:GmailMessage" sap2010:WorkflowViewState.IdRef="CSharpValue`1_121">CurrentEmail</CSharpValue>
                                    </InArgument>
                                  </uga:MoveEmailConnections.Email>
                                  <uga:MoveEmailConnections.Folder>
                                    <ugagm:FolderArgument ConnectionDescriptor="{x:Null}" ManualEntryFolderName="{x:Null}" BrowserFolderId="Label_7287505510858458536" BrowserFolderName="Bot Processed" ConnectionKey="07b47295-d01d-45f7-b1b8-f42c9fa4d006" InputMode="Browse">
                                      <ugagm:FolderArgument.Backup>
                                        <usau:BackupSlot x:TypeArguments="ugage:FolderInputMode" x:Name="__ReferenceID0" StoredValue="Browse">
                                          <usau:BackupSlot.BackupValues>
                                            <scg:Dictionary x:TypeArguments="ugage:FolderInputMode, scg:List(x:Object)" />
                                          </usau:BackupSlot.BackupValues>
                                        </usau:BackupSlot>
                                      </ugagm:FolderArgument.Backup>
                                    </ugagm:FolderArgument>
                                  </uga:MoveEmailConnections.Folder>
                                </uga:MoveEmailConnections>
                                <ui:Continue DisplayName="Continue to next email" sap:VirtualizedContainerService.HintSize="382.4,48" sap2010:WorkflowViewState.IdRef="Continue_1" />
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,91.2" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                        <Sequence DisplayName="If therapy send email" sap:VirtualizedContainerService.HintSize="502.4,56.8" sap2010:WorkflowViewState.IdRef="Sequence_31">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If sap:VirtualizedContainerService.HintSize="488,1395.2" sap2010:WorkflowViewState.IdRef="If_9">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_122">serviceType == "THERAPY"</CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="486.4,1174.4" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="452.8,113.6" sap2010:WorkflowViewState.IdRef="Assign_25">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">
                                      <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_102">isComplete</CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <If sap:VirtualizedContainerService.HintSize="452.8,1000.8" sap2010:WorkflowViewState.IdRef="If_17">
                                  <If.Condition>
                                    <InArgument x:TypeArguments="x:Boolean">
                                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_123">int.Parse(patientAge) &lt; 13</CSharpValue>
                                    </InArgument>
                                  </If.Condition>
                                  <If.Then>
                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="451.2,227.2" sap2010:WorkflowViewState.IdRef="Sequence_63">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Gmail_SendEmail - Invoke Workflow File (Gmail\\Gmail_SendEmail.xaml)" sap:VirtualizedContainerService.HintSize="417.6,167.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Gmail\\Gmail_SendEmail.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_EmailType">Therapy Children</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_EmailAddress">
                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_124">email</CSharpValue>
                                          </InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="451.2,644" sap2010:WorkflowViewState.IdRef="Sequence_64">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If sap:VirtualizedContainerService.HintSize="417.6,584" sap2010:WorkflowViewState.IdRef="If_20">
                                        <If.Condition>
                                          <InArgument x:TypeArguments="x:Boolean">
                                            <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_125">int.Parse(patientAge) &lt; 18</CSharpValue>
                                          </InArgument>
                                        </If.Condition>
                                        <If.Then>
                                          <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,227.2" sap2010:WorkflowViewState.IdRef="Sequence_70">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Gmail_SendEmail - Invoke Workflow File (Gmail\\Gmail_SendEmail.xaml)" sap:VirtualizedContainerService.HintSize="382.4,167.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Gmail\\Gmail_SendEmail.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_EmailType">Therapy Teens</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_EmailAddress">
                                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_126">email</CSharpValue>
                                                </InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,227.2" sap2010:WorkflowViewState.IdRef="Sequence_71">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Gmail_SendEmail - Invoke Workflow File (Gmail\\Gmail_SendEmail.xaml)" sap:VirtualizedContainerService.HintSize="382.4,167.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Gmail\\Gmail_SendEmail.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_EmailType">Therapy Adult</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_EmailAddress">
                                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_127">email</CSharpValue>
                                                </InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="486.4,91.2" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                        <Sequence DisplayName="Check for insurance" sap:VirtualizedContainerService.HintSize="502.4,140" sap2010:WorkflowViewState.IdRef="Sequence_32">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If sap:VirtualizedContainerService.HintSize="416,48" sap2010:WorkflowViewState.IdRef="If_10">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_128">insuranceFound == false</CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,340.8" sap2010:WorkflowViewState.IdRef="Sequence_47">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Gmail_SendEmail - Invoke Workflow File (Gmail\\Gmail_SendEmail.xaml)" sap:VirtualizedContainerService.HintSize="433.6,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Gmail\\Gmail_SendEmail.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_EmailType">Insurance</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_EmailAddress">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_129">email</CSharpValue>
                                    </InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_26">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">
                                      <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_103">isComplete</CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="467.2,89.6" sap2010:WorkflowViewState.IdRef="Sequence_48">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                        <Sequence DisplayName="Check if Credit Card is populated" sap:VirtualizedContainerService.HintSize="502.4,56.8" sap2010:WorkflowViewState.IdRef="Sequence_33">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If sap:VirtualizedContainerService.HintSize="470,934" sap2010:WorkflowViewState.IdRef="If_11">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_130">string.IsNullOrEmpty(cardNum)</CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="468,636.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_49">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,175.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_6">
                                  <ui:LogMessage.Message>
                                    <InArgument x:TypeArguments="x:Object">
                                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_131">"There is no card number provided"</CSharpValue>
                                    </InArgument>
                                  </ui:LogMessage.Message>
                                </ui:LogMessage>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Gmail_SendEmail - Invoke Workflow File (Gmail\\Gmail_SendEmail.xaml)" sap:VirtualizedContainerService.HintSize="434,177.33333333333334" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Gmail\\Gmail_SendEmail.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_EmailType">Credit Card Missing</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_EmailAddress">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_132">email</CSharpValue>
                                    </InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <Assign sap:VirtualizedContainerService.HintSize="434,116.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_27">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">
                                      <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_104">processCard</CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="434,107.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_28">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">
                                      <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_105">isComplete</CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="468,167.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="434,107.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_29">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">
                                      <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_106">processCard</CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                        <Sequence DisplayName="If doesnt match the bottom reason put in manual" sap:VirtualizedContainerService.HintSize="502.4,123.2" sap2010:WorkflowViewState.IdRef="Sequence_34">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Sequence>
                        <Sequence DisplayName="Check Preferred Provider" sap:VirtualizedContainerService.HintSize="502.4,725.6" sap2010:WorkflowViewState.IdRef="Sequence_35">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If sap:VirtualizedContainerService.HintSize="468.8,633.6" sap2010:WorkflowViewState.IdRef="If_12">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_133">preferredProvider.ToUpper().Contains("NO") || preferredProvider.Contains("Brennan Behavior Group")</CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,339.2" sap2010:WorkflowViewState.IdRef="Sequence_51">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.6,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_7">
                                  <ui:LogMessage.Message>
                                    <InArgument x:TypeArguments="x:Object">
                                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_134">"No preferred provider"</CSharpValue>
                                    </InArgument>
                                  </ui:LogMessage.Message>
                                </ui:LogMessage>
                                <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_30">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">
                                      <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_107">preferredMemo</CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="467.2,164.8" sap2010:WorkflowViewState.IdRef="Sequence_52">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_31">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">
                                      <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_108">preferredMemo</CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                        <Sequence DisplayName="Check for Clergy" sap:VirtualizedContainerService.HintSize="502.4,123.2" sap2010:WorkflowViewState.IdRef="Sequence_36">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Sequence>
                        <Sequence DisplayName="If custody agreement needed send email" sap:VirtualizedContainerService.HintSize="502.4,48" sap2010:WorkflowViewState.IdRef="Sequence_37">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If sap:VirtualizedContainerService.HintSize="468.8,561.6" sap2010:WorkflowViewState.IdRef="If_13">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_135">custodyDecision.ToUpper().Contains("YES")</CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,340.8" sap2010:WorkflowViewState.IdRef="Sequence_53">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Gmail_SendEmail - Invoke Workflow File (Gmail\\Gmail_SendEmail.xaml)" sap:VirtualizedContainerService.HintSize="433.6,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Gmail\\Gmail_SendEmail.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_EmailType">Custody Agreement</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_EmailAddress">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_136">email</CSharpValue>
                                    </InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_32">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">
                                      <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_109">isComplete</CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="467.2,91.2" sap2010:WorkflowViewState.IdRef="Sequence_54">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </Sequence>
                    </Sequence>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="523.2,168.8" sap2010:WorkflowViewState.IdRef="LogMessage_2">
                      <ui:LogMessage.Message>
                        <InArgument x:TypeArguments="x:Object">
                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">"Finished extracting information"</CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Message>
                    </ui:LogMessage>
                  </Sequence>
                </Sequence>
              </ActivityAction>
            </uix:NApplicationCard.Body>
            <uix:NApplicationCard.TargetApp>
              <uix:TargetApp Area="-11, -11, 2518, 1614" BrowserType="Chrome" ContentHash="hgQhaLD6Tky5ypN-bio5NQ" IconBase64="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAFiUAABYlAUlSJPAAAAGZSURBVDhPrZI76M9hFMbdr6GUy4BMFpsnFqXYpJSMNmWThbKIQpHBLdInBgaxWCS3jC7Lh8El9xgMxOieQUfnpz+5DU6det/3e57nnO/znGHD/ldIKkdKZkpmS2b9lPU2QzKian8FHi3ZILknuSu5L3kuedbnersjWScZ9Z2kweMkW7t4vWSl5JbkgeSJ5IZkhWRTk26UjPlGIpks2S15KlklGS/ZI7ktWShZ0hNsk4yVrOlG1XBCEZyQfJY8lpySXJJ8bFDdT/cU7yTn+14EnySHiuCA5IPknGSH5KLkpWSvZFdn1byWnO2ay5L3kp1FMElyVHJNMqfHfiRZ1PpULpU8lMyXzJPclOyv3x0UlD0XukOR1BTbhxDsk5yRzJVc6fPUgYiDLGYlhyWbJdclUyTTu2NZfFxytYm+4YZaWbm4xTvZwi1rS0vgEq/2YMEP4EEMIVktedEqH5Qc63P5v/yX4EH0x+G9TOXMK8kbyVvJ2j+CB9FFtWVl35fekS0/rO/foklKwBLtiGTiP4MrhugxbWDX7wi+AsmBiI6aESUVAAAAAElFTkSuQmCC" InformativeScreenshot="1fd1557b5638bcd511a965ea3a2f091b.jpg" Reference="8RhyklEjiEifip1A7a44sA/Raq5Vwfzu0-uSFybxI17qQ" Selector="&lt;html app='chrome.exe' title='Client Details' /&gt;" Url="https://bb.fastgem.net/orders-2/submissions/*" Version="V2" />
            </uix:NApplicationCard.TargetApp>
          </uix:NApplicationCard>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
  </Sequence>
</Activity>